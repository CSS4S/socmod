% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/agent.R
\name{Neighbors}
\alias{Neighbors}
\title{Encapsulation of an agent's neighbors.}
\description{
Encapsulate neighbors to easily access them by name, know how many there are,
check if an agent is among another's neighbors, or map a function across
all the agents.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{agents}}{Get neighbors as list of agents.}

\item{\code{n}}{Number of neighbors
Create a new instance of Neighbors using a list of Agents.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Neighbors-new}{\code{Neighbors$new()}}
\item \href{#method-Neighbors-get}{\code{Neighbors$get()}}
\item \href{#method-Neighbors-map}{\code{Neighbors$map()}}
\item \href{#method-Neighbors-contains}{\code{Neighbors$contains()}}
\item \href{#method-Neighbors-clone}{\code{Neighbors$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Neighbors-new"></a>}}
\if{latex}{\out{\hypertarget{method-Neighbors-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Neighbors$new(agents)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{agents}}{The agents to be included as neighbors.
Get neighbor by name, returning NULL if named agent is not a neighbor.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Neighbors-get"></a>}}
\if{latex}{\out{\hypertarget{method-Neighbors-get}{}}}
\subsection{Method \code{get()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Neighbors$get(name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{Agent name
Wrap purrr::map to apply function to all neighbor agents.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Neighbors-map"></a>}}
\if{latex}{\out{\hypertarget{method-Neighbors-map}{}}}
\subsection{Method \code{map()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Neighbors$map(f)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{f}}{Function to apply to all neighbors.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the result of the mapping, \emph{not} self
Check by name if an agent is one of the neighbors.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Neighbors-contains"></a>}}
\if{latex}{\out{\hypertarget{method-Neighbors-contains}{}}}
\subsection{Method \code{contains()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Neighbors$contains(name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{Name of the agent to check.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
boolean indicating whether named agent is a neighbor
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Neighbors-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Neighbors-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Neighbors$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
