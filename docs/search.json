[{"path":"https://css4s.github.io/socmod/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 socmod authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://css4s.github.io/socmod/articles/basic-diffusion-components.html","id":"data-collection-types-in-r","dir":"Articles","previous_headings":"","what":"Data collection types in R","title":"Components for basic diffusion modeling with socmod","text":"R, hierarchy data collection types necessary know functional programming, often involves applying function across every element collection data. Data collections include vectors, lists, data.frames, tibbles, ’ll cover . computer science, collection abstract data type organizes stores instances data types. R, basic data types numbers (e.g., double integer) text, whose data type character R whether ’s single character several: R vectors defined using c() function, e.g., vec <- c(0, 0, 1). data type vector elements must . enforced R coercing data different types, example: index vectors using single square brackets, R indexing starting 1: one wants keep elements different types single collection, use R list: Note visual representation changed printout. now need use double-square brackets index list elements : leave one square brackets effectively get sub-list just one element: useful want create new sub-list one element: Named lists primary key-value store R, just like dict Python. allows us label entries list access using double square brackets character name using $ access operator: tibble data.frame classes represent tabular data, meaning data can represented table format, e.g., comma- tab-separated value format. subtle differences listed , ’ll use tibble representing tables. Tibbles like fancy lists special properties make data manipulation efficient. details works aren’t super important point. important thing know one can initialize tibbles access tibble columns similarly lists, shown following example: Using tibbles ensures data manipulation analysis using tidyverse work expected. example, tidyverse provides functions analyzing different groups data within larger dataset. common data analysis pattern called split-apply-combine, tidyverse translates group-summarise using dplyr library. example, can calculate mean measurements “experimental” “control” conditions fake data: tibble library provides table data representation (also called tibble) bit flexible intuitive R built-data.frame. One reason prefer tibbles traditional data.frames automatically convert strings factors unless tell . Tibbles don’t, ’re never surprised. Column naming also flexible tibbles. data.frame requires syntactically valid R names, tibbles can handle column names include spaces even non-standard characters. often use feature use column names like Mean adaptation success print nicely used labels ggplot. Finally, tibble operations always return tibble. example, df data.frame, operation df[, 1] return vector default. tibble return another tibble, making behavior predictable data analysis pipelines.","code":"print(typeof('c')) [1] \"character\" print(typeof(\"social science is kewl\")) [1] \"character\" print(c(0, 0, 1)) [1] 0 0 1 print(c(0, 0, \"yo\")) [1] \"0\"  \"0\"  \"yo\" vec <- c(1, 2, 3, 4, 5) # equiv to vec <- 1:5 or seq(1, 5) print(vec[1]) [1] 1 print(vec[length(vec)]) [1] 5 l <- list(0, 542, \"yo\") print(l) [[1]] [1] 0  [[2]] [1] 542  [[3]] [1] \"yo\" print(l[[3]]) [1] \"yo\" print(l[3]) [[1]] [1] \"yo\" print(l[c(2, 3)]) [[1]] [1] 542  [[2]] [1] \"yo\" named_l <- list(a = c(0, 5, 6), b = c(7, 8, 9)) print(named_l$a == named_l[[\"a\"]]) # compares element-by-element [1] TRUE TRUE TRUE print(all(named_l$b == named_l[[\"b\"]])) [1] TRUE tbl <- tibble::tibble(a = c(0, 5, 6), b = c(7, 8, 9)) print(tbl$a) [1] 0 5 6 print(tbl[[\"b\"]]) [1] 7 8 9 observations <- tibble::tibble(   condition = c(\"experimental\", \"experimental\", \"control\", \"control\"),   measurement = c(13.5, 14.6, 3.4, 5.4) )  mean_measurement_tbl <-    observations %>%    dplyr::group_by(condition) %>%    dplyr::summarise(mean_measurement = mean(measurement))  print(mean_measurement_tbl) # A tibble: 2 × 2   condition    mean_measurement   <chr>                   <dbl> 1 control                   4.4 2 experimental             14.0"},{"path":"https://css4s.github.io/socmod/articles/basic-diffusion-components.html","id":"collections-of-basic-data-types","dir":"Articles","previous_headings":"","what":"Collections of basic data types","title":"Components for basic diffusion modeling with socmod","text":"computer science, collection abstract data type organizes stores instances data types. R, basic data types numbers (e.g., double integer) text, whose data type character R whether ’s single character several:","code":"print(typeof('c')) [1] \"character\" print(typeof(\"social science is kewl\")) [1] \"character\""},{"path":"https://css4s.github.io/socmod/articles/basic-diffusion-components.html","id":"vectors","dir":"Articles","previous_headings":"","what":"Vectors","title":"Components for basic diffusion modeling with socmod","text":"R vectors defined using c() function, e.g., vec <- c(0, 0, 1). data type vector elements must . enforced R coercing data different types, example: index vectors using single square brackets, R indexing starting 1:","code":"print(c(0, 0, 1)) [1] 0 0 1 print(c(0, 0, \"yo\")) [1] \"0\"  \"0\"  \"yo\" vec <- c(1, 2, 3, 4, 5) # equiv to vec <- 1:5 or seq(1, 5) print(vec[1]) [1] 1 print(vec[length(vec)]) [1] 5"},{"path":"https://css4s.github.io/socmod/articles/basic-diffusion-components.html","id":"lists","dir":"Articles","previous_headings":"","what":"Lists","title":"Components for basic diffusion modeling with socmod","text":"one wants keep elements different types single collection, use R list: Note visual representation changed printout. now need use double-square brackets index list elements : leave one square brackets effectively get sub-list just one element: useful want create new sub-list one element:","code":"l <- list(0, 542, \"yo\") print(l) [[1]] [1] 0  [[2]] [1] 542  [[3]] [1] \"yo\" print(l[[3]]) [1] \"yo\" print(l[3]) [[1]] [1] \"yo\" print(l[c(2, 3)]) [[1]] [1] 542  [[2]] [1] \"yo\""},{"path":"https://css4s.github.io/socmod/articles/basic-diffusion-components.html","id":"named-lists","dir":"Articles","previous_headings":"","what":"Named lists","title":"Components for basic diffusion modeling with socmod","text":"Named lists primary key-value store R, just like dict Python. allows us label entries list access using double square brackets character name using $ access operator:","code":"named_l <- list(a = c(0, 5, 6), b = c(7, 8, 9)) print(named_l$a == named_l[[\"a\"]]) # compares element-by-element [1] TRUE TRUE TRUE print(all(named_l$b == named_l[[\"b\"]])) [1] TRUE"},{"path":"https://css4s.github.io/socmod/articles/basic-diffusion-components.html","id":"tibble-and-data-frame","dir":"Articles","previous_headings":"","what":"tibble (and data.frame)","title":"Components for basic diffusion modeling with socmod","text":"tibble data.frame classes represent tabular data, meaning data can represented table format, e.g., comma- tab-separated value format. subtle differences listed , ’ll use tibble representing tables. Tibbles like fancy lists special properties make data manipulation efficient. details works aren’t super important point. important thing know one can initialize tibbles access tibble columns similarly lists, shown following example: Using tibbles ensures data manipulation analysis using tidyverse work expected. example, tidyverse provides functions analyzing different groups data within larger dataset. common data analysis pattern called split-apply-combine, tidyverse translates group-summarise using dplyr library. example, can calculate mean measurements “experimental” “control” conditions fake data:","code":"tbl <- tibble::tibble(a = c(0, 5, 6), b = c(7, 8, 9)) print(tbl$a) [1] 0 5 6 print(tbl[[\"b\"]]) [1] 7 8 9 observations <- tibble::tibble(   condition = c(\"experimental\", \"experimental\", \"control\", \"control\"),   measurement = c(13.5, 14.6, 3.4, 5.4) )  mean_measurement_tbl <-    observations %>%    dplyr::group_by(condition) %>%    dplyr::summarise(mean_measurement = mean(measurement))  print(mean_measurement_tbl) # A tibble: 2 × 2   condition    mean_measurement   <chr>                   <dbl> 1 control                   4.4 2 experimental             14.0"},{"path":"https://css4s.github.io/socmod/articles/basic-diffusion-components.html","id":"difference-between-data-frame-and-tibble","dir":"Articles","previous_headings":"","what":"Difference between data.frame and tibble","title":"Components for basic diffusion modeling with socmod","text":"tibble library provides table data representation (also called tibble) bit flexible intuitive R built-data.frame. One reason prefer tibbles traditional data.frames automatically convert strings factors unless tell . Tibbles don’t, ’re never surprised. Column naming also flexible tibbles. data.frame requires syntactically valid R names, tibbles can handle column names include spaces even non-standard characters. often use feature use column names like Mean adaptation success print nicely used labels ggplot. Finally, tibble operations always return tibble. example, df data.frame, operation df[, 1] return vector default. tibble return another tibble, making behavior predictable data analysis pipelines.","code":""},{"path":"https://css4s.github.io/socmod/articles/basic-diffusion-components.html","id":"functional-programming","dir":"Articles","previous_headings":"","what":"Functional programming","title":"Components for basic diffusion modeling with socmod","text":"Functional programming especially useful writing code applies function several inputs, wants leave user specify exactly function applied. socmod pass functions arguments functions specify agents pick interaction partners (.e., teachers learning context) social learning works. simple examples demonstrating key concepts techniques functional programming help socmod programming. R, programming languages supporting functional style, one can treat functions like data pass argument functions. function accepts function argument called higher-order function. simple example higher order function takes data first argument applies function f data twice, putting result calculation two-element vector. call higher order function providing data=2 first argument anonymous function second argument, can written using \\(arg) { ...function body... } syntax: representation vector printed screen, see expectations matched. One useful common higher-order functions map function. function maps function, denoted .f , onto every element collection, denoted .x. notation map family functions purrr library tidy functional programming. example mapping anonymous function multiplies input 3 onto vector entries 2 8: want apply function takes two variables, value index element collection, can use imap family functions follows return vector contains original element multiplied place input vector:","code":"repeat_2_higher_order_func <- function(data, f) {   return (c(f(data), f(data))) } # \\(x) {...} is equivalent to function(x) { ... }; these are  # anonymous functions. # Expecting to return c(4, 4) repeat_2_higher_order_func(data = 2, f = \\(x) { return (x * 2) }) [1] 4 4 c(4, 4) [1] 4 4 library(purrr) # Now get we use map_vec that applies .f to every element of .x, # expecting the following to return a vector with elements 3*2  # and 3*8, i.e., c(6, 24). purrr::map_vec(.x = c(2, 8), .f = \\(x) { return(3 * x)}) [1]  6 24 input_vec <- c(2, 5050, 6) purrr::imap_vec(input_vec, \\(el, idx) { return (idx * el) }) [1]     2 10100    18"},{"path":"https://css4s.github.io/socmod/articles/basic-diffusion-components.html","id":"higher-order-functions-functions-with-function-arguments","dir":"Articles","previous_headings":"","what":"Higher-order functions: functions with function arguments","title":"Components for basic diffusion modeling with socmod","text":"R, programming languages supporting functional style, one can treat functions like data pass argument functions. function accepts function argument called higher-order function. simple example higher order function takes data first argument applies function f data twice, putting result calculation two-element vector. call higher order function providing data=2 first argument anonymous function second argument, can written using \\(arg) { ...function body... } syntax: representation vector printed screen, see expectations matched.","code":"repeat_2_higher_order_func <- function(data, f) {   return (c(f(data), f(data))) } # \\(x) {...} is equivalent to function(x) { ... }; these are  # anonymous functions. # Expecting to return c(4, 4) repeat_2_higher_order_func(data = 2, f = \\(x) { return (x * 2) }) [1] 4 4 c(4, 4) [1] 4 4"},{"path":"https://css4s.github.io/socmod/articles/basic-diffusion-components.html","id":"map-a-common-useful-higher-order-function-used-often-in-socmod","dir":"Articles","previous_headings":"","what":"map: a common, useful higher-order function used often in socmod","title":"Components for basic diffusion modeling with socmod","text":"One useful common higher-order functions map function. function maps function, denoted .f , onto every element collection, denoted .x. notation map family functions purrr library tidy functional programming. example mapping anonymous function multiplies input 3 onto vector entries 2 8: want apply function takes two variables, value index element collection, can use imap family functions follows return vector contains original element multiplied place input vector:","code":"library(purrr) # Now get we use map_vec that applies .f to every element of .x, # expecting the following to return a vector with elements 3*2  # and 3*8, i.e., c(6, 24). purrr::map_vec(.x = c(2, 8), .f = \\(x) { return(3 * x)}) [1]  6 24 input_vec <- c(2, 5050, 6) purrr::imap_vec(input_vec, \\(el, idx) { return (idx * el) }) [1]     2 10100    18"},{"path":"https://css4s.github.io/socmod/articles/basic-diffusion-components.html","id":"custom-objects-r6-classes-in-socmod","dir":"Articles","previous_headings":"","what":"Custom objects: R6 classes in socmod","title":"Components for basic diffusion modeling with socmod","text":"Classes ways encapsulate diverse distinct, related, processes, behaviors, data, attributes, types information single object, .e., software representation instance entity. R6 library creating custom classes serve abstract template specifies distinguishes different types objects/entities. show first create new agent, .e., new instance Agent class provided socmod. fun example can design different social behavioral model, one football/soccer matches. write classes players teams develop play_match(team1, team2) function pits two teams . create new instance Agent class using class constructor, function written socmod::Agent$new() creates new instance class. can use access operator, $ R, access fields (.e., attributes) agent a1 like : can also use purrr::map functions neighbors like : class started creating model soccer player agent called Footballer, defined . ran time end class write methods Footballer, .e., ways football player interact world, world act upon soccer player. However time create stub two methods. stub minimal chunk code little nothing, doesn’t get way causing errors anything like . enables us document plans future development exact place happen code. stubs score_goal get_penalty methods -game behaviors. possibilities include get_traded change team perhaps get_signed cases player free agent. can define function simulates playing football match team scores goals wins, tie teams score. track penalties received assume don’t effect match outcome. assume player gets ten chances score goal. leave reader exercise make use Footballer$get_penalty_on_play() method within game add penalties consequences game (e.g., penalty kicks something), use Team$sign_player() add players roster, increase mean total scores game based simple way ’ve modeled gameplay play_match. First need teams, create assign players using constructor, Team$new() code .","code":"a1 <- socmod::Agent$new(1, name = \"Matt\",                          behavior = \"Adaptive\",                          fitness=1e6) print(a1$get_fitness()) [1] 1e+06 print(a1$get_name()) [1] \"Matt\" print(a1$get_id()) [1] 1 print(a1$get_behavior()) [1] \"Adaptive\" # Assign neighbors to a1.  a1$set_neighbors(c(   socmod::Agent$new(id = 2, name = \"n2\"),   socmod::Agent$new(id = 3, name = \"n3\") ))  # Get the list of neighbors back to check it worked. neighbors <- a1$get_neighbors() print(class(neighbors))  # should be [1] \"Neighbors\" \"R6\" [1] \"Neighbors\" \"R6\" # Neighbors$map() returns a list... neighbor_names <- neighbors$map(\\(n) n$get_name()) print(neighbor_names) [[1]] [1] \"n2\"  [[2]] [1] \"n3\" # ...use `unlist` to convert it to a vector: print(unlist(neighbor_names)) [1] \"n2\" \"n3\" library(R6)  Footballer <- R6Class(\"Footballer\",                            public = list(     # Listing attributes as fields and      # setting to zero for their definition.     speed = 0.0,  # units of max km/h     accuracy = 0.0, # probability of scoring on a shot     market_value = 0.0, #      aggressiveness = 0.0, # units of penalties per match     team = \"\",          initialize = function(speed = 15,                            accuracy = 0.2, market_value = 1e6,                            aggressiveness = 0.5,                            team = \"Free agent\") {       self$speed = speed       self$accuracy = accuracy       self$market_value = market_value       self$aggressiveness = aggressiveness       self$team = team     },          # Stub two SoccerPlayer class methods...     # ...one for scoring a goal in a game...     scored_goal = function() {       return (ifelse(runif(1) < self$accuracy, 1, 0))     },     # ...and one for getting a penalty in a game.     get_penalty_on_play = function() {       return (runif(1) < self$aggressiveness)     }   ) )  Team <- R6Class(\"Team\",                    public = list(     name = \"\",     players = list(),     wins = 0,     ties = 0,     payroll = 0,     games_played = 0,          # Team name is required, with players optionally specified.     initialize = function(name, players = list()) {        self$name = name        # Initialize players and payroll.       for (player in players) {         self$payroll <- self$payroll + player$market_value         player$team <- name       }        self$players <- players     },          # Add a player to the roster.     sign_player = function(player) {       # Add the player to the team.       self$players <- c(players, player)       # Update payroll.       self$payroll <- self$payroll + player$market_value       # Update the player's team to be this team's name.       player$team <- self$name     }   ) ) footballer <- Footballer$new(accuracy = 0.5) footballer$scored_goal() [1] 1 # sum(purrr::map_vec(1:10, \\(.) p$scored_goal())) # Define a function that models a football match. play_match <- function(team1, team2) {      # Walk over each player to see how many scores they get,    # summing to get the total team score.    team1_score <- sum(     purrr::map_vec(       team1$players,       \\(player) {       # Calculate the total goals scored by the current player.         sum(purrr::map_vec(1:10, \\(.) player$scored_goal()))       }     )    )      team2_score <- sum(     purrr::map_vec(       team2$players,       \\(player) {       # Calculate the total goals scored by the current player.         sum(purrr::map_vec(1:10, \\(.) player$scored_goal()))       }     )    )      if (team1_score == team2_score) {     team1$ties <- team1$ties + 1     team2$ties <- team2$ties + 1     cat(\"Tie game!\\n\")   } else if (team1_score > team2_score) {     cat(team1$name, \"wins!!!\\n\")     team1$wins <- team1$wins + 1   } else {     cat(team2$name, \"wins!!!\\n\")     team2$wins <- team2$wins + 1   }      cat(team1$name, \": \", team1_score, \"   \",         team2$name, \": \", team2_score, \"\\n\")      team1$games_played <- team1$games_played + 1   team2$games_played <- team2$games_played + 1 } # Initialize two teams, Whales and Squirrels, each with two # players. All players have identical default attributes. whales <- Team$new(   name = \"Whales\",    players = c(Footballer$new(), Footballer$new()) ) squirrels <- Team$new(   name = \"Squirrels\",    players = c(Footballer$new(), Footballer$new()) )  # Play three matches. play_match(whales, squirrels) Whales wins!!! Whales :  5     Squirrels :  3 play_match(squirrels, whales) Tie game! Squirrels :  5     Whales :  5 play_match(squirrels, whales) Tie game! Squirrels :  4     Whales :  4 # Print how many games each time won. cat(\"\\nAfter three games...\", \"\\nThe Whales have won\",      whales$wins, \"games and the Squirrels have won\", squirrels$wins) After three games... The Whales have won 1 games and the Squirrels have won 0"},{"path":"https://css4s.github.io/socmod/articles/basic-diffusion-components.html","id":"the-agent-class-in-socmod","dir":"Articles","previous_headings":"","what":"The Agent class in socmod","title":"Components for basic diffusion modeling with socmod","text":"create new instance Agent class using class constructor, function written socmod::Agent$new() creates new instance class. can use access operator, $ R, access fields (.e., attributes) agent a1 like : can also use purrr::map functions neighbors like :","code":"a1 <- socmod::Agent$new(1, name = \"Matt\",                          behavior = \"Adaptive\",                          fitness=1e6) print(a1$get_fitness()) [1] 1e+06 print(a1$get_name()) [1] \"Matt\" print(a1$get_id()) [1] 1 print(a1$get_behavior()) [1] \"Adaptive\" # Assign neighbors to a1.  a1$set_neighbors(c(   socmod::Agent$new(id = 2, name = \"n2\"),   socmod::Agent$new(id = 3, name = \"n3\") ))  # Get the list of neighbors back to check it worked. neighbors <- a1$get_neighbors() print(class(neighbors))  # should be [1] \"Neighbors\" \"R6\" [1] \"Neighbors\" \"R6\" # Neighbors$map() returns a list... neighbor_names <- neighbors$map(\\(n) n$get_name()) print(neighbor_names) [[1]] [1] \"n2\"  [[2]] [1] \"n3\" # ...use `unlist` to convert it to a vector: print(unlist(neighbor_names)) [1] \"n2\" \"n3\""},{"path":"https://css4s.github.io/socmod/articles/basic-diffusion-components.html","id":"exercise-design-and-define-classes-from-scratch","dir":"Articles","previous_headings":"","what":"Exercise: design and define classes from scratch","title":"Components for basic diffusion modeling with socmod","text":"class started creating model soccer player agent called Footballer, defined . ran time end class write methods Footballer, .e., ways football player interact world, world act upon soccer player. However time create stub two methods. stub minimal chunk code little nothing, doesn’t get way causing errors anything like . enables us document plans future development exact place happen code. stubs score_goal get_penalty methods -game behaviors. possibilities include get_traded change team perhaps get_signed cases player free agent. can define function simulates playing football match team scores goals wins, tie teams score. track penalties received assume don’t effect match outcome. assume player gets ten chances score goal. leave reader exercise make use Footballer$get_penalty_on_play() method within game add penalties consequences game (e.g., penalty kicks something), use Team$sign_player() add players roster, increase mean total scores game based simple way ’ve modeled gameplay play_match. First need teams, create assign players using constructor, Team$new() code .","code":"library(R6)  Footballer <- R6Class(\"Footballer\",                            public = list(     # Listing attributes as fields and      # setting to zero for their definition.     speed = 0.0,  # units of max km/h     accuracy = 0.0, # probability of scoring on a shot     market_value = 0.0, #      aggressiveness = 0.0, # units of penalties per match     team = \"\",          initialize = function(speed = 15,                            accuracy = 0.2, market_value = 1e6,                            aggressiveness = 0.5,                            team = \"Free agent\") {       self$speed = speed       self$accuracy = accuracy       self$market_value = market_value       self$aggressiveness = aggressiveness       self$team = team     },          # Stub two SoccerPlayer class methods...     # ...one for scoring a goal in a game...     scored_goal = function() {       return (ifelse(runif(1) < self$accuracy, 1, 0))     },     # ...and one for getting a penalty in a game.     get_penalty_on_play = function() {       return (runif(1) < self$aggressiveness)     }   ) )  Team <- R6Class(\"Team\",                    public = list(     name = \"\",     players = list(),     wins = 0,     ties = 0,     payroll = 0,     games_played = 0,          # Team name is required, with players optionally specified.     initialize = function(name, players = list()) {        self$name = name        # Initialize players and payroll.       for (player in players) {         self$payroll <- self$payroll + player$market_value         player$team <- name       }        self$players <- players     },          # Add a player to the roster.     sign_player = function(player) {       # Add the player to the team.       self$players <- c(players, player)       # Update payroll.       self$payroll <- self$payroll + player$market_value       # Update the player's team to be this team's name.       player$team <- self$name     }   ) ) footballer <- Footballer$new(accuracy = 0.5) footballer$scored_goal() [1] 1 # sum(purrr::map_vec(1:10, \\(.) p$scored_goal())) # Define a function that models a football match. play_match <- function(team1, team2) {      # Walk over each player to see how many scores they get,    # summing to get the total team score.    team1_score <- sum(     purrr::map_vec(       team1$players,       \\(player) {       # Calculate the total goals scored by the current player.         sum(purrr::map_vec(1:10, \\(.) player$scored_goal()))       }     )    )      team2_score <- sum(     purrr::map_vec(       team2$players,       \\(player) {       # Calculate the total goals scored by the current player.         sum(purrr::map_vec(1:10, \\(.) player$scored_goal()))       }     )    )      if (team1_score == team2_score) {     team1$ties <- team1$ties + 1     team2$ties <- team2$ties + 1     cat(\"Tie game!\\n\")   } else if (team1_score > team2_score) {     cat(team1$name, \"wins!!!\\n\")     team1$wins <- team1$wins + 1   } else {     cat(team2$name, \"wins!!!\\n\")     team2$wins <- team2$wins + 1   }      cat(team1$name, \": \", team1_score, \"   \",         team2$name, \": \", team2_score, \"\\n\")      team1$games_played <- team1$games_played + 1   team2$games_played <- team2$games_played + 1 } # Initialize two teams, Whales and Squirrels, each with two # players. All players have identical default attributes. whales <- Team$new(   name = \"Whales\",    players = c(Footballer$new(), Footballer$new()) ) squirrels <- Team$new(   name = \"Squirrels\",    players = c(Footballer$new(), Footballer$new()) )  # Play three matches. play_match(whales, squirrels) Whales wins!!! Whales :  5     Squirrels :  3 play_match(squirrels, whales) Tie game! Squirrels :  5     Whales :  5 play_match(squirrels, whales) Tie game! Squirrels :  4     Whales :  4 # Print how many games each time won. cat(\"\\nAfter three games...\", \"\\nThe Whales have won\",      whales$wins, \"games and the Squirrels have won\", squirrels$wins) After three games... The Whales have won 1 games and the Squirrels have won 0"},{"path":"https://css4s.github.io/socmod/articles/basic-diffusion-components.html","id":"agent-based-models-of-social-behavior","dir":"Articles","previous_headings":"","what":"Agent-based models of social behavior","title":"Components for basic diffusion modeling with socmod","text":"develop first agent-based models social behavior. ’ll start small, following four-household network solar panel electrification using success-biased learning (Figure 1). ’ll detailed comparison different social learning strategies different parameterizations. Figure 1: Example social network sustainable adaptation diffusion problem. example, agent 2 adopted rooftop solar. adaptive fitness, can thought financial gain adopting sustainable, adaptive behavior. can directly create social network using igraph::make_graph() set model’s social network, along setting learning strategy contagion learning. adoption_rate parameter specifies likely another agent adopt adaptive behavior exposed . drop_rate likely agent adaptive behavior stop revert non-adaptive behavior.   Agent-based models socmod composed sub-models cognition social behavior social networks. One component agent cognition social learning strategy. Three social learning strategies included socmod: success-biased, frequency-biased, contagion learning strategies see ABM course notes details. show compare three learning strategies across different learning parameters. One parameter systematically vary affects success-biased learning, systematically vary affects contagion learning. design computational experiments understand effects, overall differences three learning strategies. Now plot…  Example computational experiment testing effect adaptive fitness success rate across three learning strategies.  Example computational experiment testing effect adoption rate success rate across three learning strategies.","code":"adoption_rate = 0.8   # Run model with  g <- igraph::make_graph(~ 1-2, 1-3, 1-4, 3-2) mps <- make_model_parameters(   contagion_learning_strategy, graph = g, adoption_rate = 0.8, drop_rate = 0.1 ) cabm <- make_abm(mps);  cabm$get_agent(2)$set_behavior(\"Adaptive\");  trial <- run_trial(cabm, stop = fixated) plot_adoption(trial, tracked_behaviors = c(\"Legacy\", \"Adaptive\")) # Same, but now call the adaptive behavior \"Baglowie\" instead of \"Adaptive\". g <- igraph::make_graph(~ 1-2, 1-3, 1-4, 3-2) mps <- make_model_parameters(   contagion_learning_strategy, graph = g, adoption_rate = 0.8, drop_rate = 0.1 )  cabm <- make_abm(mps) cabm$get_agent(2)$set_behavior(\"Baglowie\");   trial <- run_trial(cabm, stop = fixated, adaptive_behavior = \"Baglowie\") plot_adoption(trial, tracked_behaviors = c(\"Legacy\", \"Baglowie\")) # Load ggplot2 to avoid writing it during plotting below. library(ggplot2) # Model generation function used in both computational experiments below. gen <- function(model_parameter_row) {      # Extract adaptive_fitness to create agents.   adaptive_fitness <- model_parameter_row$adaptive_fitness      agent_1 <- socmod::Agent$new(1, behavior = \"Legacy\",                                 fitness = 1.0, name = \"a1\")   agent_2 <- socmod::Agent$new(2, behavior = \"Adaptive\",                                 fitness = adaptive_fitness, name = \"a2\")   agent_3 <- socmod::Agent$new(3, behavior = \"Legacy\",                                 fitness = 1.0, name = \"a3\")   agent_4 <- socmod::Agent$new(4, behavior = \"Legacy\",                                 fitness = 1.0, name = \"a4\")      agents <- list(agent_1, agent_2, agent_3, agent_4)   graph <- igraph::make_graph(~ 1-2, 1-3, 1-4, 3-2)      # Extract other necessary model parameters.   learning_strategy <- model_parameter_row$learning_strategy   drop_rate <- model_parameter_row$drop_rate   adoption_rate <- model_parameter_row$adoption_rate      # Make ModelParameters to encapsulate this model's parameters.   model_parameters <- socmod::make_model_parameters(     learning_strategy, graph, adaptive_fitness = adaptive_fitness,      adoption_rate = adoption_rate, drop_rate = drop_rate   )      return (     socmod::make_abm(       model_parameters,       agents = agents     )   ) } # Run the adaptive fitness trials if there is not already a variable # name for it in the current environment. Change n_trials_per_param to # a small number like 2-20 for development purposes. if (!(\"trials_adaptive_fitness\" %in% ls(all.names = TRUE))) {   trials_adaptive_fitness <- socmod::run_trials(     gen,      n_trials_per_param = 100,  # change to 2-20 for shorter runs     stop = socmod::fixated,      syncfile = \"trials-adaptive_fitness.RData\",     # overwrite = TRUE,     learning_strategy = c(socmod::success_bias_learning_strategy,                           socmod::frequency_bias_learning_strategy,                           socmod::contagion_learning_strategy),     adaptive_fitness = seq(0.8, 2.4, 0.2),     adoption_rate = 0.6,     drop_rate = 0.2   ) }  trials_summary <- socmod::summarise_by_parameters(   trials_adaptive_fitness, c(\"learning_strategy\", \"adaptive_fitness\") )  trials_success_rate <- dplyr::filter(trials_summary, Measure == \"success_rate\") p <- ggplot(trials_success_rate,                aes(x=adaptive_fitness, y=Value,                    color=learning_strategy) ) +   geom_line(linewidth=1.0) + geom_point(size=2.15) +   ggsci::scale_color_aaas() + ggsci::scale_fill_aaas() +   xlab(\"Adaptive fitness\") + ylab(\"Success rate\") +   scale_x_continuous(breaks = sort(     unique(trials_summary$adaptive_fitness)   )) +   theme_classic(base_size=14) +   ylim(0, 1.0) +   guides(color = guide_legend(title = \"Learning strategy\")) +   ggtitle(\"Adoption rate = 0.6, drop rate = 0.2\")  ggsave(\"vignettes/resources/adaptive_fitness_experiment.png\", p,         width = 5, height = 3) if (!(\"trials_adoption\" %in% ls(all.names = TRUE))) {   trials_adoption <- socmod::run_trials(     gen,     n_trials_per_param = 100,     stop = socmod::fixated,      syncfile = \"trials-adoption-rate.RData\",     overwrite = TRUE,     learning_strategy = c(socmod::success_bias_learning_strategy,                           socmod::frequency_bias_learning_strategy,                           socmod::contagion_learning_strategy),     adaptive_fitness = 1.4,     adoption_rate = c(0.05, 0.2, 0.4, 0.6, 0.8, 1.0),     drop_rate = 0.2   ) } trials_summary <- socmod::summarise_by_parameters(   trials_adoption, c(\"learning_strategy\", \"adoption_rate\") )  trials_success_rate <- dplyr::filter(   trials_summary, Measure == \"success_rate\" ) p <- ggplot(trials_success_rate,              aes(x=adoption_rate, y=Value, color=learning_strategy)) +   geom_line(linewidth=1.0) + geom_point(size=2.15) +   ggsci::scale_color_aaas() + ggsci::scale_fill_aaas() +   xlab(\"Adoption rate\") + ylab(\"Success rate\") +   scale_x_continuous(breaks = sort(unique(trials_summary$adoption_rate))) +   theme_classic(base_size=14) +   ylim(0, 1.0) +   guides(color = guide_legend(title = \"Learning strategy\")) +   ggtitle(\"Adaptive fitness = 1.4, drop rate = 0.2\")  ggsave(\"vignettes/resources/adoption_rate_experiment.png\",         p, width=5, height=3)"},{"path":"https://css4s.github.io/socmod/articles/basic-diffusion-components.html","id":"example-1-time-series-of-adaptation-diffusion","dir":"Articles","previous_headings":"","what":"Example 1: Time series of adaptation diffusion","title":"Components for basic diffusion modeling with socmod","text":"","code":"adoption_rate = 0.8   # Run model with  g <- igraph::make_graph(~ 1-2, 1-3, 1-4, 3-2) mps <- make_model_parameters(   contagion_learning_strategy, graph = g, adoption_rate = 0.8, drop_rate = 0.1 ) cabm <- make_abm(mps);  cabm$get_agent(2)$set_behavior(\"Adaptive\");  trial <- run_trial(cabm, stop = fixated) plot_adoption(trial, tracked_behaviors = c(\"Legacy\", \"Adaptive\")) # Same, but now call the adaptive behavior \"Baglowie\" instead of \"Adaptive\". g <- igraph::make_graph(~ 1-2, 1-3, 1-4, 3-2) mps <- make_model_parameters(   contagion_learning_strategy, graph = g, adoption_rate = 0.8, drop_rate = 0.1 )  cabm <- make_abm(mps) cabm$get_agent(2)$set_behavior(\"Baglowie\");   trial <- run_trial(cabm, stop = fixated, adaptive_behavior = \"Baglowie\") plot_adoption(trial, tracked_behaviors = c(\"Legacy\", \"Baglowie\"))"},{"path":"https://css4s.github.io/socmod/articles/basic-diffusion-components.html","id":"example-comparison-of-learning-strategies-and-parameters","dir":"Articles","previous_headings":"","what":"Example: comparison of learning strategies and parameters","title":"Components for basic diffusion modeling with socmod","text":"Agent-based models socmod composed sub-models cognition social behavior social networks. One component agent cognition social learning strategy. Three social learning strategies included socmod: success-biased, frequency-biased, contagion learning strategies see ABM course notes details. show compare three learning strategies across different learning parameters. One parameter systematically vary affects success-biased learning, systematically vary affects contagion learning. design computational experiments understand effects, overall differences three learning strategies. Now plot…  Example computational experiment testing effect adaptive fitness success rate across three learning strategies.  Example computational experiment testing effect adoption rate success rate across three learning strategies.","code":"# Load ggplot2 to avoid writing it during plotting below. library(ggplot2) # Model generation function used in both computational experiments below. gen <- function(model_parameter_row) {      # Extract adaptive_fitness to create agents.   adaptive_fitness <- model_parameter_row$adaptive_fitness      agent_1 <- socmod::Agent$new(1, behavior = \"Legacy\",                                 fitness = 1.0, name = \"a1\")   agent_2 <- socmod::Agent$new(2, behavior = \"Adaptive\",                                 fitness = adaptive_fitness, name = \"a2\")   agent_3 <- socmod::Agent$new(3, behavior = \"Legacy\",                                 fitness = 1.0, name = \"a3\")   agent_4 <- socmod::Agent$new(4, behavior = \"Legacy\",                                 fitness = 1.0, name = \"a4\")      agents <- list(agent_1, agent_2, agent_3, agent_4)   graph <- igraph::make_graph(~ 1-2, 1-3, 1-4, 3-2)      # Extract other necessary model parameters.   learning_strategy <- model_parameter_row$learning_strategy   drop_rate <- model_parameter_row$drop_rate   adoption_rate <- model_parameter_row$adoption_rate      # Make ModelParameters to encapsulate this model's parameters.   model_parameters <- socmod::make_model_parameters(     learning_strategy, graph, adaptive_fitness = adaptive_fitness,      adoption_rate = adoption_rate, drop_rate = drop_rate   )      return (     socmod::make_abm(       model_parameters,       agents = agents     )   ) } # Run the adaptive fitness trials if there is not already a variable # name for it in the current environment. Change n_trials_per_param to # a small number like 2-20 for development purposes. if (!(\"trials_adaptive_fitness\" %in% ls(all.names = TRUE))) {   trials_adaptive_fitness <- socmod::run_trials(     gen,      n_trials_per_param = 100,  # change to 2-20 for shorter runs     stop = socmod::fixated,      syncfile = \"trials-adaptive_fitness.RData\",     # overwrite = TRUE,     learning_strategy = c(socmod::success_bias_learning_strategy,                           socmod::frequency_bias_learning_strategy,                           socmod::contagion_learning_strategy),     adaptive_fitness = seq(0.8, 2.4, 0.2),     adoption_rate = 0.6,     drop_rate = 0.2   ) }  trials_summary <- socmod::summarise_by_parameters(   trials_adaptive_fitness, c(\"learning_strategy\", \"adaptive_fitness\") )  trials_success_rate <- dplyr::filter(trials_summary, Measure == \"success_rate\") p <- ggplot(trials_success_rate,                aes(x=adaptive_fitness, y=Value,                    color=learning_strategy) ) +   geom_line(linewidth=1.0) + geom_point(size=2.15) +   ggsci::scale_color_aaas() + ggsci::scale_fill_aaas() +   xlab(\"Adaptive fitness\") + ylab(\"Success rate\") +   scale_x_continuous(breaks = sort(     unique(trials_summary$adaptive_fitness)   )) +   theme_classic(base_size=14) +   ylim(0, 1.0) +   guides(color = guide_legend(title = \"Learning strategy\")) +   ggtitle(\"Adoption rate = 0.6, drop rate = 0.2\")  ggsave(\"vignettes/resources/adaptive_fitness_experiment.png\", p,         width = 5, height = 3) if (!(\"trials_adoption\" %in% ls(all.names = TRUE))) {   trials_adoption <- socmod::run_trials(     gen,     n_trials_per_param = 100,     stop = socmod::fixated,      syncfile = \"trials-adoption-rate.RData\",     overwrite = TRUE,     learning_strategy = c(socmod::success_bias_learning_strategy,                           socmod::frequency_bias_learning_strategy,                           socmod::contagion_learning_strategy),     adaptive_fitness = 1.4,     adoption_rate = c(0.05, 0.2, 0.4, 0.6, 0.8, 1.0),     drop_rate = 0.2   ) } trials_summary <- socmod::summarise_by_parameters(   trials_adoption, c(\"learning_strategy\", \"adoption_rate\") )  trials_success_rate <- dplyr::filter(   trials_summary, Measure == \"success_rate\" ) p <- ggplot(trials_success_rate,              aes(x=adoption_rate, y=Value, color=learning_strategy)) +   geom_line(linewidth=1.0) + geom_point(size=2.15) +   ggsci::scale_color_aaas() + ggsci::scale_fill_aaas() +   xlab(\"Adoption rate\") + ylab(\"Success rate\") +   scale_x_continuous(breaks = sort(unique(trials_summary$adoption_rate))) +   theme_classic(base_size=14) +   ylim(0, 1.0) +   guides(color = guide_legend(title = \"Learning strategy\")) +   ggtitle(\"Adaptive fitness = 1.4, drop rate = 0.2\")  ggsave(\"vignettes/resources/adoption_rate_experiment.png\",         p, width=5, height=3)"},{"path":"https://css4s.github.io/socmod/articles/basic-diffusion-components.html","id":"experiment-over-adaptive-fitness-values","dir":"Articles","previous_headings":"","what":"Experiment over adaptive fitness values","title":"Components for basic diffusion modeling with socmod","text":"Now plot…  Example computational experiment testing effect adaptive fitness success rate across three learning strategies.","code":"# Run the adaptive fitness trials if there is not already a variable # name for it in the current environment. Change n_trials_per_param to # a small number like 2-20 for development purposes. if (!(\"trials_adaptive_fitness\" %in% ls(all.names = TRUE))) {   trials_adaptive_fitness <- socmod::run_trials(     gen,      n_trials_per_param = 100,  # change to 2-20 for shorter runs     stop = socmod::fixated,      syncfile = \"trials-adaptive_fitness.RData\",     # overwrite = TRUE,     learning_strategy = c(socmod::success_bias_learning_strategy,                           socmod::frequency_bias_learning_strategy,                           socmod::contagion_learning_strategy),     adaptive_fitness = seq(0.8, 2.4, 0.2),     adoption_rate = 0.6,     drop_rate = 0.2   ) }  trials_summary <- socmod::summarise_by_parameters(   trials_adaptive_fitness, c(\"learning_strategy\", \"adaptive_fitness\") )  trials_success_rate <- dplyr::filter(trials_summary, Measure == \"success_rate\") p <- ggplot(trials_success_rate,                aes(x=adaptive_fitness, y=Value,                    color=learning_strategy) ) +   geom_line(linewidth=1.0) + geom_point(size=2.15) +   ggsci::scale_color_aaas() + ggsci::scale_fill_aaas() +   xlab(\"Adaptive fitness\") + ylab(\"Success rate\") +   scale_x_continuous(breaks = sort(     unique(trials_summary$adaptive_fitness)   )) +   theme_classic(base_size=14) +   ylim(0, 1.0) +   guides(color = guide_legend(title = \"Learning strategy\")) +   ggtitle(\"Adoption rate = 0.6, drop rate = 0.2\")  ggsave(\"vignettes/resources/adaptive_fitness_experiment.png\", p,         width = 5, height = 3)"},{"path":"https://css4s.github.io/socmod/articles/basic-diffusion-components.html","id":"experiment-over-adoption-rate-values","dir":"Articles","previous_headings":"","what":"Experiment over adoption rate values","title":"Components for basic diffusion modeling with socmod","text":"Example computational experiment testing effect adoption rate success rate across three learning strategies.","code":"if (!(\"trials_adoption\" %in% ls(all.names = TRUE))) {   trials_adoption <- socmod::run_trials(     gen,     n_trials_per_param = 100,     stop = socmod::fixated,      syncfile = \"trials-adoption-rate.RData\",     overwrite = TRUE,     learning_strategy = c(socmod::success_bias_learning_strategy,                           socmod::frequency_bias_learning_strategy,                           socmod::contagion_learning_strategy),     adaptive_fitness = 1.4,     adoption_rate = c(0.05, 0.2, 0.4, 0.6, 0.8, 1.0),     drop_rate = 0.2   ) } trials_summary <- socmod::summarise_by_parameters(   trials_adoption, c(\"learning_strategy\", \"adoption_rate\") )  trials_success_rate <- dplyr::filter(   trials_summary, Measure == \"success_rate\" ) p <- ggplot(trials_success_rate,              aes(x=adoption_rate, y=Value, color=learning_strategy)) +   geom_line(linewidth=1.0) + geom_point(size=2.15) +   ggsci::scale_color_aaas() + ggsci::scale_fill_aaas() +   xlab(\"Adoption rate\") + ylab(\"Success rate\") +   scale_x_continuous(breaks = sort(unique(trials_summary$adoption_rate))) +   theme_classic(base_size=14) +   ylim(0, 1.0) +   guides(color = guide_legend(title = \"Learning strategy\")) +   ggtitle(\"Adaptive fitness = 1.4, drop rate = 0.2\")  ggsave(\"vignettes/resources/adoption_rate_experiment.png\",         p, width=5, height=3)"},{"path":"https://css4s.github.io/socmod/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Matt Turner. Author, maintainer.","code":""},{"path":"https://css4s.github.io/socmod/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Turner M (2025). socmod: Models Social Behavior R. R package version 0.1.0, https://css4s.github.io/socmod/.","code":"@Manual{,   title = {socmod: Models of Social Behavior in R},   author = {Matt Turner},   year = {2025},   note = {R package version 0.1.0},   url = {https://css4s.github.io/socmod/}, }"},{"path":"https://css4s.github.io/socmod/index.html","id":"socmod","dir":"","previous_headings":"","what":"Models of Social Behavior in R","title":"Models of Social Behavior in R","text":"socmod provides framework utilities developing simulations social learning social influence structured social networks. developed support course Computational Social Science Sustainability Stanford Doerr School Sustainability. course teaches theory techniques understanding cognitive social mechanisms influencing beliefs behaviors can combined computational models predict relative efficacy different candidate interventions sustainability, e.g., promote ecological protection, public health, economic security justice, climate action, name just sustainable development goals. socmod flexible encapsulate social process can modeled follows: (1) individuals initialized knowledge payoff behaviors beliefs hold; (2) exchange information socially time teaching, observation, discourse, etc. process illustrated figure:  Currently focus socmod developing models informational behavioral interventions promote sustainable behaviors call adaptations, AA. yet AA said legacy behavior, LL. agent can assigned gain fitness tracked time, can linked whether AA LL. socmod provides tools initializing simulated individuals (.e., agents), social networks, behaviors. capabilities introduced simple example .","code":""},{"path":"https://css4s.github.io/socmod/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Models of Social Behavior in R","text":"can install development version socmod GitHub devtools pak: devtools pak","code":"# Install this if you don't have devtools. install.packages(\"devtools\") devtools::install_github(\"css4s/socmod\") # Install this if you don't have pak. install.packages(\"pak\") pak::pak(\"css4s/socmod\")"},{"path":"https://css4s.github.io/socmod/index.html","id":"quickstart-examples","dir":"","previous_headings":"","what":"Quickstart examples","title":"Models of Social Behavior in R","text":"understand socmod help organize develop models social behavior, let’s consider simple example just four individuals illustrated figure . initialize agents behaviors payoffs shown , explain use different social learning strategies simulate diffusion adaptation, AA. AA yields payoff 2 legacy LL behavior yields payoff 1. matters success-biased social learning strategy, frequency-biased strategy unbiased contagion learning. simple network nieghborhood individual/agent can initialize agents network follows. next code block first initialize four agents named “”, “n_i1”, “n_i2”, “n_i3” match illustration focal/learner agent ii three neighbors (one instance socmod::Agent class). create social network illustration using igraph. Finally, initialize new socmod::AgentBasedModel using helper function make_example_abm. next subsection use helper function initialize new models run frequency- success-biased adaptive learning strategies, using learning functions provided socmod. show define non-adaptive contagion learning functions, adapted compartmental epidemiological modeling.","code":"make_example_abm <- function(legacy_fitness = 1.0, adaptive_fitness = 2.0, ...) {   # Example ABM builder with four agents as pictured above. Can pass arbitrary   # named parameters in ... that will be passed to make_abm as additional   # model parameters.      agents <- c(     Agent$new(1, name = \"i\", behavior = \"Legacy\", fitness = legacy_fitness),      Agent$new(2, name = \"n_i1\", behavior = \"Legacy\", fitness = legacy_fitness),      Agent$new(1, name = \"n_i2\", behavior = \"Legacy\", fitness = legacy_fitness),      Agent$new(1, name = \"n_i3\", behavior = \"Adaptive\", fitness = adaptive_fitness)   )    # Initialize network.   socnet <- igraph::make_graph(~ 1-2:3:4, 3-4)  # Create the agent-based model and plot the model's network.   return (make_abm(make_model_parameters(graph = socnet), agents = agents, ...)) }  abm <- make_example_abm() # Visualize social network to ensure it was created properly. ggnetplot(abm$graph) +        geom_edges(linewidth=0.1) +        geom_nodes(color = \"#008566\", size=4) +        # `name` in label = name was set automagically during ABM construction.       geom_nodelabel_repel(aes(label = name), size = 2) +        theme_blank()"},{"path":"https://css4s.github.io/socmod/index.html","id":"model-dynamics-with-different-adaptive-social-learning-strategies","dir":"","previous_headings":"Quickstart examples","what":"Model dynamics with different adaptive social learning strategies","title":"Models of Social Behavior in R","text":"set three different models three learning strategies provided socmod: success-biased, frequency-biased, contagion learning.","code":""},{"path":"https://css4s.github.io/socmod/index.html","id":"success-biased-learning","dir":"","previous_headings":"Quickstart examples > Model dynamics with different adaptive social learning strategies","what":"Success-biased learning","title":"Models of Social Behavior in R","text":"success-biased learning, probability learner adopts behavior proportional relative fitness neighbors. Note simplest model success-biased transmission, one agent AA, agent always adopts LL first time step. “stubbornness” parameter can passed model parameter represents frequently individual ignores social information continues using current behavior. Success-biased learning default, specify explicitly.","code":"abm <- make_example_abm() trial <- run_trial(abm, stop = fixated) print(tail(trial$get_observations(), n = 10)) #> # A tibble: 10 × 4 #>        t agent Behavior Fitness #>    <dbl> <chr> <chr>      <dbl> #>  1     6 n_i2  Adaptive       2 #>  2     6 n_i3  Legacy         1 #>  3     7 i     Legacy         1 #>  4     7 n_i1  Adaptive       2 #>  5     7 n_i2  Legacy         1 #>  6     7 n_i3  Adaptive       2 #>  7     8 i     Legacy         1 #>  8     8 n_i1  Legacy         1 #>  9     8 n_i2  Legacy         1 #> 10     8 n_i3  Legacy         1 plot_adoption(trial, tracked_behaviors = c(\"Legacy\", \"Adaptive\"))"},{"path":"https://css4s.github.io/socmod/index.html","id":"frequency-biased-learning","dir":"","previous_headings":"Quickstart examples > Model dynamics with different adaptive social learning strategies","what":"Frequency-biased learning","title":"Models of Social Behavior in R","text":"frequency-biased learning, probability learner adopts behavior proportional number network neighbors behavior. first time step, , ni2n_{i2} 1/2 probability adopting AA, ii 1/3 probability adopting AA. Frequency-biased learning default, need explicilty specify use model parameters passing frequency_biased_learning_strategy make_model_parameters helper function:","code":"abm <- make_example_abm() trial <- run_trial(abm, stop = fixated) print(tail(trial$get_observations(), n = 10)) #> # A tibble: 10 × 4 #>        t agent Behavior Fitness #>    <dbl> <chr> <chr>      <dbl> #>  1     4 n_i2  Adaptive       2 #>  2     4 n_i3  Adaptive       2 #>  3     5 i     Adaptive       2 #>  4     5 n_i1  Legacy         1 #>  5     5 n_i2  Adaptive       2 #>  6     5 n_i3  Adaptive       2 #>  7     6 i     Adaptive       2 #>  8     6 n_i1  Adaptive       2 #>  9     6 n_i2  Adaptive       2 #> 10     6 n_i3  Adaptive       2 plot_adoption(trial, tracked_behaviors = c(\"Legacy\", \"Adaptive\"))"},{"path":"https://css4s.github.io/socmod/index.html","id":"networks","dir":"","previous_headings":"Quickstart examples","what":"Networks","title":"Models of Social Behavior in R","text":"Socmod provides helper functions create plot important network types, shown .","code":""},{"path":"https://css4s.github.io/socmod/index.html","id":"regular-lattice","dir":"","previous_headings":"Quickstart examples","what":"Regular lattice","title":"Models of Social Behavior in R","text":"","code":"latnet <- socmod::make_regular_lattice(N = 10, k = 4) ggnetplot(latnet, layout = \\(g) 0.6*layout_in_circle(g)) +        geom_edges(linewidth=0.2, color=\"darkgray\") +        geom_nodes(color = \"#008566\", size=1) +        theme_blank()"},{"path":"https://css4s.github.io/socmod/index.html","id":"random-networks","dir":"","previous_headings":"Quickstart examples","what":"Random networks","title":"Models of Social Behavior in R","text":"Erdős–Rényi G(N,M)G(N,M)","code":"gnm_net <- G_NM(20, 30) ggnetplot(gnm_net) +    geom_edges(linewidth=0.2, color= \"darkgray\") +    geom_nodes(color = \"#008566\", size=.75) +    theme_blank()"},{"path":"https://css4s.github.io/socmod/index.html","id":"small-world-networks","dir":"","previous_headings":"Quickstart examples","what":"Small-world networks","title":"Models of Social Behavior in R","text":"","code":"sw_net <- make_small_world(N = 10, k = 4, p=0.3) ggnetplot(sw_net, layout = \\(net) 0.6*layout_in_circle(net)) +        geom_edges(linewidth=0.2, color=\"darkgray\") +        geom_nodes(color = \"#008566\", size=1) +        theme_blank(base_size = 12)"},{"path":"https://css4s.github.io/socmod/index.html","id":"preferential-attachment-networks","dir":"","previous_headings":"Quickstart examples","what":"Preferential attachment networks","title":"Models of Social Behavior in R","text":"","code":"pa_net <- make_preferential_attachment(N = 100) ggnetplot(pa_net, layout = \\(net) 0.6*layout_with_fr(net)) +        geom_edges(linewidth=0.2, color=\"darkgray\") +        geom_nodes(color = \"#008566\", size=0.35) +        theme_blank()"},{"path":"https://css4s.github.io/socmod/index.html","id":"homophily-networks","dir":"","previous_headings":"Quickstart examples","what":"Homophily networks","title":"Models of Social Behavior in R","text":"Homophily may set globally, .e., symmetrically, group proportion within- -group connections. may also set asymmetrically, groups different group-level homophily. network models defined homophily levels group size, altogether defining call group structure, metapopulation structure borrowing epidemiological use.","code":""},{"path":"https://css4s.github.io/socmod/index.html","id":"symmetric-homophily","dir":"","previous_headings":"Quickstart examples > Homophily networks","what":"Symmetric homophily","title":"Models of Social Behavior in R","text":"Positive symmetric homophily example makes within-group social connections 50% likely -group connections. words, 75% ties within-group 25% group. metapopulation composed two groups population sizes 5 10.  Now symmetric anti-homophily -0.5 leads 50% fewer within-group connections -group. Now metapopulation composed five groups five members .","code":"# Two groups size 5 and 10. hnet_2grp <- make_homophily_network(c(5, 10), mean_degree = 3, homophily = 0.5) ggnetplot(hnet_2grp, \\(net) 0.6*layout_in_circle(net)) +   geom_edges(linewidth = 0.15, color=\"darkgray\") +   geom_nodes(aes(color = group), size = 1.25) +   theme_blank(base_size=8) library(ggsci)  # some nice colors for science, using Amer. Assoc. for Adv. Science theme below  # Five groups all size 5 with out-group preference (neg. homophily). hnet_5grp <- make_homophily_network(rep(5, 5), mean_degree = 2, homophily = -0.5) ggnetplot(hnet_5grp, \\(net) 0.6*layout_in_circle(net)) +   geom_edges(linewidth = 0.215, color=\"darkgray\") +   geom_nodes(aes(color = group), size = 2) +   ggsci::scale_color_aaas() +   theme_blank(base_size=12)"},{"path":"https://css4s.github.io/socmod/index.html","id":"asymmetric-homophily","dir":"","previous_headings":"Quickstart examples > Homophily networks","what":"Asymmetric homophily","title":"Models of Social Behavior in R","text":"homophily set group-level instead globally, call asymmetric homophily. create asymmetric homphily network model educational structure colonialized populations, small, insular minority group colonizers imposes information flow larger, local majority group, homophily level forcibly reduced. model insularity among colonizers high homophily 0.9 represent situation local community slightly negative homophily level, -0.2:","code":"# Two groups size 5 and 10. hnet_asymm <- make_homophily_network(c(10, 30), mean_degree = 8, homophily = c(0.9, -0.2)) ggnetplot(hnet_asymm, \\(net) 0.6*layout_in_circle(net)) +   geom_edges(linewidth = 0.15, color=\"darkgray\", alpha = 0.6) +   geom_nodes(aes(color = group), size = 2.25) +   theme_blank(base_size=12)"},{"path":"https://css4s.github.io/socmod/index.html","id":"more-information-and-the-philosophy-of-socmod","dir":"","previous_headings":"","what":"More information and the philosophy of socmod","title":"Models of Social Behavior in R","text":"Different models social behavior specified details many individuals population, behaviors opinions , benefits accrue(d) behaviors, learn influence one another, environmental relevant factors. framework seeks encapsulate different approaches modeling diverse social behaviors, thoroughly reviewed Paul Smaldino’s (2023) textbook Modeling Social Behavior. Technically, socmod uses object-oriented programming, provided R6, functional-style agent model behavior specification inspired Agents.jl, enjoyed using. , still plotting R, beginning students across disciplines tend know R Julia. R also seems great community r-lib project seems bringing continuity scientific programming seen programming language.","code":""},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":null,"dir":"Reference","previous_headings":"","what":"Agent class for socmod — Agent","title":"Agent class for socmod — Agent","text":"Agent class socmod Agent class socmod","code":""},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Agent class for socmod — Agent","text":"Represents individual agent social network. agent stores behavioral, fitness, neighbor information. class designed encapsulated, data access via getter/setter methods.","code":""},{"path":[]},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Agent class for socmod — Agent","text":"Agent$new() Agent$get_id() Agent$get_name() Agent$set_name() Agent$get_behavior() Agent$set_behavior() Agent$get_next_behavior() Agent$set_next_behavior() Agent$get_fitness() Agent$set_fitness() Agent$get_next_fitness() Agent$set_next_fitness() Agent$advance_behavior() Agent$advance_fitness() Agent$get_neighbors() Agent$set_neighbors() Agent$add_neighbors() Agent$remove_neighbors() Agent$degree() Agent$set_attribute() Agent$get_attribute() Agent$set_attributes() Agent$get_attributes() Agent$clone()","code":""},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Agent class for socmod — Agent","text":"Initialize Agent Sets new Agent instance ID, optional name, initial behavior, fitness values. Behavior fitness copied current next state fields. Neighbors container also initialized.","code":""},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Agent class for socmod — Agent","text":"","code":"Agent$new(id, name = NULL, behavior = \"0\", fitness = 0)"},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Agent class for socmod — Agent","text":"id Integer string ID agent (used internally, necessarily name) name Optional character name agent. Defaults \"aid\". behavior Initial behavior (character). Default \"0\". fitness Initial fitness (numeric). Default 0.","code":""},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"method-get-id-","dir":"Reference","previous_headings":"","what":"Method get_id()","title":"Agent class for socmod — Agent","text":"Get agent's vertex ID","code":""},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Agent class for socmod — Agent","text":"","code":"Agent$get_id()"},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"method-get-name-","dir":"Reference","previous_headings":"","what":"Method get_name()","title":"Agent class for socmod — Agent","text":"Get agent's name","code":""},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Agent class for socmod — Agent","text":"","code":"Agent$get_name()"},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"method-set-name-","dir":"Reference","previous_headings":"","what":"Method set_name()","title":"Agent class for socmod — Agent","text":"Set agent's name","code":""},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Agent class for socmod — Agent","text":"","code":"Agent$set_name(name)"},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Agent class for socmod — Agent","text":"name New name assign","code":""},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"method-get-behavior-","dir":"Reference","previous_headings":"","what":"Method get_behavior()","title":"Agent class for socmod — Agent","text":"Get current behavior","code":""},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Agent class for socmod — Agent","text":"","code":"Agent$get_behavior()"},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"method-set-behavior-","dir":"Reference","previous_headings":"","what":"Method set_behavior()","title":"Agent class for socmod — Agent","text":"Set current behavior","code":""},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Agent class for socmod — Agent","text":"","code":"Agent$set_behavior(value)"},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Agent class for socmod — Agent","text":"value New current behavior","code":""},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"method-get-next-behavior-","dir":"Reference","previous_headings":"","what":"Method get_next_behavior()","title":"Agent class for socmod — Agent","text":"Get next behavior","code":""},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Agent class for socmod — Agent","text":"","code":"Agent$get_next_behavior()"},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"method-set-next-behavior-","dir":"Reference","previous_headings":"","what":"Method set_next_behavior()","title":"Agent class for socmod — Agent","text":"Set next behavior","code":""},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Agent class for socmod — Agent","text":"","code":"Agent$set_next_behavior(value)"},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Agent class for socmod — Agent","text":"value New next behavior","code":""},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"method-get-fitness-","dir":"Reference","previous_headings":"","what":"Method get_fitness()","title":"Agent class for socmod — Agent","text":"Get current fitness","code":""},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Agent class for socmod — Agent","text":"","code":"Agent$get_fitness()"},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"method-set-fitness-","dir":"Reference","previous_headings":"","what":"Method set_fitness()","title":"Agent class for socmod — Agent","text":"Set current fitness","code":""},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Agent class for socmod — Agent","text":"","code":"Agent$set_fitness(value)"},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Agent class for socmod — Agent","text":"value Numeric value assign","code":""},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"method-get-next-fitness-","dir":"Reference","previous_headings":"","what":"Method get_next_fitness()","title":"Agent class for socmod — Agent","text":"Get next fitness","code":""},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Agent class for socmod — Agent","text":"","code":"Agent$get_next_fitness()"},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"method-set-next-fitness-","dir":"Reference","previous_headings":"","what":"Method set_next_fitness()","title":"Agent class for socmod — Agent","text":"Set next fitness","code":""},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Agent class for socmod — Agent","text":"","code":"Agent$set_next_fitness(value)"},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Agent class for socmod — Agent","text":"value Numeric value assign","code":""},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"method-advance-behavior-","dir":"Reference","previous_headings":"","what":"Method advance_behavior()","title":"Agent class for socmod — Agent","text":"Advance next behavior","code":""},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Agent class for socmod — Agent","text":"","code":"Agent$advance_behavior()"},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"method-advance-fitness-","dir":"Reference","previous_headings":"","what":"Method advance_fitness()","title":"Agent class for socmod — Agent","text":"Advance next fitness","code":""},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Agent class for socmod — Agent","text":"","code":"Agent$advance_fitness()"},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"method-get-neighbors-","dir":"Reference","previous_headings":"","what":"Method get_neighbors()","title":"Agent class for socmod — Agent","text":"Get neighbors object","code":""},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Agent class for socmod — Agent","text":"","code":"Agent$get_neighbors()"},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"method-set-neighbors-","dir":"Reference","previous_headings":"","what":"Method set_neighbors()","title":"Agent class for socmod — Agent","text":"Set neighbors object","code":""},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"Agent class for socmod — Agent","text":"","code":"Agent$set_neighbors(nbrs)"},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Agent class for socmod — Agent","text":"nbrs Neighbors instance","code":""},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"method-add-neighbors-","dir":"Reference","previous_headings":"","what":"Method add_neighbors()","title":"Agent class for socmod — Agent","text":"Add one neighbors","code":""},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"Agent class for socmod — Agent","text":"","code":"Agent$add_neighbors(...)"},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Agent class for socmod — Agent","text":"... Agent instances add neighbors","code":""},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"method-remove-neighbors-","dir":"Reference","previous_headings":"","what":"Method remove_neighbors()","title":"Agent class for socmod — Agent","text":"Remove one neighbors","code":""},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"Agent class for socmod — Agent","text":"","code":"Agent$remove_neighbors(...)"},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Agent class for socmod — Agent","text":"... Agent instances remove","code":""},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"method-degree-","dir":"Reference","previous_headings":"","what":"Method degree()","title":"Agent class for socmod — Agent","text":"Get agent's degree (via neighbors)","code":""},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"usage-18","dir":"Reference","previous_headings":"","what":"Usage","title":"Agent class for socmod — Agent","text":"","code":"Agent$degree()"},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Agent class for socmod — Agent","text":"Integer degree","code":""},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"method-set-attribute-","dir":"Reference","previous_headings":"","what":"Method set_attribute()","title":"Agent class for socmod — Agent","text":"Set arbitrary named attribute","code":""},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"usage-19","dir":"Reference","previous_headings":"","what":"Usage","title":"Agent class for socmod — Agent","text":"","code":"Agent$set_attribute(key, value)"},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Agent class for socmod — Agent","text":"key Attribute name value Value assign","code":""},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"method-get-attribute-","dir":"Reference","previous_headings":"","what":"Method get_attribute()","title":"Agent class for socmod — Agent","text":"Get value named attribute","code":""},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"usage-20","dir":"Reference","previous_headings":"","what":"Usage","title":"Agent class for socmod — Agent","text":"","code":"Agent$get_attribute(key)"},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Agent class for socmod — Agent","text":"key Attribute name","code":""},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"method-set-attributes-","dir":"Reference","previous_headings":"","what":"Method set_attributes()","title":"Agent class for socmod — Agent","text":"Set multiple attributes","code":""},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"usage-21","dir":"Reference","previous_headings":"","what":"Usage","title":"Agent class for socmod — Agent","text":"","code":"Agent$set_attributes(attr_list)"},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Agent class for socmod — Agent","text":"attr_list named list attributes","code":""},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"method-get-attributes-","dir":"Reference","previous_headings":"","what":"Method get_attributes()","title":"Agent class for socmod — Agent","text":"Get custom attributes named list","code":""},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"usage-22","dir":"Reference","previous_headings":"","what":"Usage","title":"Agent class for socmod — Agent","text":"","code":"Agent$get_attributes()"},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Agent class for socmod — Agent","text":"objects class cloneable method.","code":""},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"usage-23","dir":"Reference","previous_headings":"","what":"Usage","title":"Agent class for socmod — Agent","text":"","code":"Agent$clone(deep = FALSE)"},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"Agent class for socmod — Agent","text":"deep Whether make deep clone.","code":""},{"path":"https://css4s.github.io/socmod/reference/Agent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Agent class for socmod — Agent","text":"","code":"# Create a basic agent with default settings a1 <- Agent$new(1)  # Create a named agent with specific behavior and fitness a2 <- Agent$new(id = 1, name = \"Mia\", behavior = \"1\", fitness = 0.75)  # Access ID and name a2$get_id() #> [1] 1 a2$get_name() #> [1] \"Mia\"  # Check and update behavior a2$get_behavior() #> [1] \"1\" a2$set_behavior(\"0\") a2$advance_behavior()  # Set and retrieve custom attributes a2$set_attribute(\"group\", \"treatment\") a2$get_attribute(\"group\") #> [1] \"treatment\""},{"path":"https://css4s.github.io/socmod/reference/AgentBasedModel.html","id":null,"dir":"Reference","previous_headings":"","what":"AgentBasedModel class for socmod — AgentBasedModel","title":"AgentBasedModel class for socmod — AgentBasedModel","text":"AgentBasedModel class socmod AgentBasedModel class socmod","code":""},{"path":"https://css4s.github.io/socmod/reference/AgentBasedModel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"AgentBasedModel class for socmod — AgentBasedModel","text":"class represents main simulation container, holding agents social network. ensures synchronization agent states underlying igraph network.","code":""},{"path":[]},{"path":"https://css4s.github.io/socmod/reference/AgentBasedModel.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"AgentBasedModel class for socmod — AgentBasedModel","text":"AgentBasedModel$new() AgentBasedModel$sync_network() AgentBasedModel$get_agent() AgentBasedModel$get_network() AgentBasedModel$get_parameters() AgentBasedModel$set_parameters() AgentBasedModel$set_parameter() AgentBasedModel$get_parameter() AgentBasedModel$clone()","code":""},{"path":"https://css4s.github.io/socmod/reference/AgentBasedModel.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"AgentBasedModel class for socmod — AgentBasedModel","text":"Initialize model either graph, agents, n_agents","code":""},{"path":"https://css4s.github.io/socmod/reference/AgentBasedModel.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AgentBasedModel class for socmod — AgentBasedModel","text":"","code":"AgentBasedModel$new(model_parameters = DEFAULT_PARAMETERS, agents = NULL)"},{"path":"https://css4s.github.io/socmod/reference/AgentBasedModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AgentBasedModel class for socmod — AgentBasedModel","text":"agents list Agent objects (optional) graph igraph object (optional) n_agents Integer number agents create (optional)","code":""},{"path":"https://css4s.github.io/socmod/reference/AgentBasedModel.html","id":"method-sync-network-","dir":"Reference","previous_headings":"","what":"Method sync_network()","title":"AgentBasedModel class for socmod — AgentBasedModel","text":"Synchronize agent network fields","code":""},{"path":"https://css4s.github.io/socmod/reference/AgentBasedModel.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"AgentBasedModel class for socmod — AgentBasedModel","text":"","code":"AgentBasedModel$sync_network(   direction = c(\"to_graph\", \"from_graph\", \"neighbors_only\") )"},{"path":"https://css4s.github.io/socmod/reference/AgentBasedModel.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"AgentBasedModel class for socmod — AgentBasedModel","text":"direction \"to_graph\", \"from_graph\", \"neighbors_only\"","code":""},{"path":"https://css4s.github.io/socmod/reference/AgentBasedModel.html","id":"method-get-agent-","dir":"Reference","previous_headings":"","what":"Method get_agent()","title":"AgentBasedModel class for socmod — AgentBasedModel","text":"Get agent associated given ID name","code":""},{"path":"https://css4s.github.io/socmod/reference/AgentBasedModel.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"AgentBasedModel class for socmod — AgentBasedModel","text":"","code":"AgentBasedModel$get_agent(key)"},{"path":"https://css4s.github.io/socmod/reference/AgentBasedModel.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"AgentBasedModel class for socmod — AgentBasedModel","text":"key Integer index character name","code":""},{"path":"https://css4s.github.io/socmod/reference/AgentBasedModel.html","id":"method-get-network-","dir":"Reference","previous_headings":"","what":"Method get_network()","title":"AgentBasedModel class for socmod — AgentBasedModel","text":"Return igraph network (syncing agents)","code":""},{"path":"https://css4s.github.io/socmod/reference/AgentBasedModel.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"AgentBasedModel class for socmod — AgentBasedModel","text":"","code":"AgentBasedModel$get_network()"},{"path":"https://css4s.github.io/socmod/reference/AgentBasedModel.html","id":"method-get-parameters-","dir":"Reference","previous_headings":"","what":"Method get_parameters()","title":"AgentBasedModel class for socmod — AgentBasedModel","text":"Get model parameters","code":""},{"path":"https://css4s.github.io/socmod/reference/AgentBasedModel.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"AgentBasedModel class for socmod — AgentBasedModel","text":"","code":"AgentBasedModel$get_parameters()"},{"path":"https://css4s.github.io/socmod/reference/AgentBasedModel.html","id":"method-set-parameters-","dir":"Reference","previous_headings":"","what":"Method set_parameters()","title":"AgentBasedModel class for socmod — AgentBasedModel","text":"Set multiple model parameters","code":""},{"path":"https://css4s.github.io/socmod/reference/AgentBasedModel.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"AgentBasedModel class for socmod — AgentBasedModel","text":"","code":"AgentBasedModel$set_parameters(params)"},{"path":"https://css4s.github.io/socmod/reference/AgentBasedModel.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"AgentBasedModel class for socmod — AgentBasedModel","text":"params Named list parameters set","code":""},{"path":"https://css4s.github.io/socmod/reference/AgentBasedModel.html","id":"method-set-parameter-","dir":"Reference","previous_headings":"","what":"Method set_parameter()","title":"AgentBasedModel class for socmod — AgentBasedModel","text":"Set single model parameter","code":""},{"path":"https://css4s.github.io/socmod/reference/AgentBasedModel.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"AgentBasedModel class for socmod — AgentBasedModel","text":"","code":"AgentBasedModel$set_parameter(key, value)"},{"path":"https://css4s.github.io/socmod/reference/AgentBasedModel.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"AgentBasedModel class for socmod — AgentBasedModel","text":"key Parameter name value Parameter value","code":""},{"path":"https://css4s.github.io/socmod/reference/AgentBasedModel.html","id":"method-get-parameter-","dir":"Reference","previous_headings":"","what":"Method get_parameter()","title":"AgentBasedModel class for socmod — AgentBasedModel","text":"Get single model parameter","code":""},{"path":"https://css4s.github.io/socmod/reference/AgentBasedModel.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"AgentBasedModel class for socmod — AgentBasedModel","text":"","code":"AgentBasedModel$get_parameter(key)"},{"path":"https://css4s.github.io/socmod/reference/AgentBasedModel.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"AgentBasedModel class for socmod — AgentBasedModel","text":"key Parameter name","code":""},{"path":"https://css4s.github.io/socmod/reference/AgentBasedModel.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"AgentBasedModel class for socmod — AgentBasedModel","text":"objects class cloneable method.","code":""},{"path":"https://css4s.github.io/socmod/reference/AgentBasedModel.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"AgentBasedModel class for socmod — AgentBasedModel","text":"","code":"AgentBasedModel$clone(deep = FALSE)"},{"path":"https://css4s.github.io/socmod/reference/AgentBasedModel.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"AgentBasedModel class for socmod — AgentBasedModel","text":"deep Whether make deep clone.","code":""},{"path":"https://css4s.github.io/socmod/reference/DEFAULT_PARAMETERS.html","id":null,"dir":"Reference","previous_headings":"","what":"Default parameters to create an agent-based model. — DEFAULT_PARAMETERS","title":"Default parameters to create an agent-based model. — DEFAULT_PARAMETERS","text":"Default parameters create agent-based model.","code":""},{"path":"https://css4s.github.io/socmod/reference/DEFAULT_PARAMETERS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default parameters to create an agent-based model. — DEFAULT_PARAMETERS","text":"","code":"DEFAULT_PARAMETERS"},{"path":"https://css4s.github.io/socmod/reference/DEFAULT_PARAMETERS.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Default parameters to create an agent-based model. — DEFAULT_PARAMETERS","text":"object class ModelParameters (inherits R6) length 12.","code":""},{"path":"https://css4s.github.io/socmod/reference/G_NM.html","id":null,"dir":"Reference","previous_headings":"","what":"Erdős-Rényi random graph G(N, M). — G_NM","title":"Erdős-Rényi random graph G(N, M). — G_NM","text":"Erdős-Rényi random graph G(N, M).","code":""},{"path":"https://css4s.github.io/socmod/reference/G_NM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Erdős-Rényi random graph G(N, M). — G_NM","text":"","code":"G_NM(N, M)"},{"path":"https://css4s.github.io/socmod/reference/G_NM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Erdős-Rényi random graph G(N, M). — G_NM","text":"N number nodes/agents M number edges randomly assigned","code":""},{"path":"https://css4s.github.io/socmod/reference/G_NM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Erdős-Rényi random graph G(N, M). — G_NM","text":"igraph Graph instance","code":""},{"path":"https://css4s.github.io/socmod/reference/G_NM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Erdős-Rényi random graph G(N, M). — G_NM","text":"","code":"# Create a 10-node network with 10 randomly-assigned edges library(igraph) #>  #> Attaching package: ‘igraph’ #> The following objects are masked from ‘package:stats’: #>  #>     decompose, spectrum #> The following object is masked from ‘package:base’: #>  #>     union net <- G_NM(10, 10) plot(net)"},{"path":"https://css4s.github.io/socmod/reference/LearningStrategy.html","id":null,"dir":"Reference","previous_headings":"","what":"LearningStrategy — LearningStrategy","title":"LearningStrategy — LearningStrategy","text":"LearningStrategy LearningStrategy","code":""},{"path":"https://css4s.github.io/socmod/reference/LearningStrategy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"LearningStrategy — LearningStrategy","text":"Represents reusable learning strategy composed partner selection function, interaction function, descriptive label.","code":""},{"path":[]},{"path":"https://css4s.github.io/socmod/reference/LearningStrategy.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"LearningStrategy — LearningStrategy","text":"LearningStrategy$new() LearningStrategy$get_partner_selection() LearningStrategy$get_interaction() LearningStrategy$get_model_step() LearningStrategy$get_label() LearningStrategy$clone()","code":""},{"path":"https://css4s.github.io/socmod/reference/LearningStrategy.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"LearningStrategy — LearningStrategy","text":"Create new LearningStrategy","code":""},{"path":"https://css4s.github.io/socmod/reference/LearningStrategy.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LearningStrategy — LearningStrategy","text":"","code":"LearningStrategy$new(partner_selection, interaction, model_step, label)"},{"path":"https://css4s.github.io/socmod/reference/LearningStrategy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LearningStrategy — LearningStrategy","text":"partner_selection Function select teacher (NULL) interaction Function define interaction (NULL) label string label strategy","code":""},{"path":"https://css4s.github.io/socmod/reference/LearningStrategy.html","id":"method-get-partner-selection-","dir":"Reference","previous_headings":"","what":"Method get_partner_selection()","title":"LearningStrategy — LearningStrategy","text":"Get partner selection function","code":""},{"path":"https://css4s.github.io/socmod/reference/LearningStrategy.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"LearningStrategy — LearningStrategy","text":"","code":"LearningStrategy$get_partner_selection()"},{"path":"https://css4s.github.io/socmod/reference/LearningStrategy.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"LearningStrategy — LearningStrategy","text":"Function","code":""},{"path":"https://css4s.github.io/socmod/reference/LearningStrategy.html","id":"method-get-interaction-","dir":"Reference","previous_headings":"","what":"Method get_interaction()","title":"LearningStrategy — LearningStrategy","text":"Get interaction function","code":""},{"path":"https://css4s.github.io/socmod/reference/LearningStrategy.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"LearningStrategy — LearningStrategy","text":"","code":"LearningStrategy$get_interaction()"},{"path":"https://css4s.github.io/socmod/reference/LearningStrategy.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"LearningStrategy — LearningStrategy","text":"Function","code":""},{"path":"https://css4s.github.io/socmod/reference/LearningStrategy.html","id":"method-get-model-step-","dir":"Reference","previous_headings":"","what":"Method get_model_step()","title":"LearningStrategy — LearningStrategy","text":"Get interaction function","code":""},{"path":"https://css4s.github.io/socmod/reference/LearningStrategy.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"LearningStrategy — LearningStrategy","text":"","code":"LearningStrategy$get_model_step()"},{"path":"https://css4s.github.io/socmod/reference/LearningStrategy.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"LearningStrategy — LearningStrategy","text":"Function","code":""},{"path":"https://css4s.github.io/socmod/reference/LearningStrategy.html","id":"method-get-label-","dir":"Reference","previous_headings":"","what":"Method get_label()","title":"LearningStrategy — LearningStrategy","text":"Get strategy label","code":""},{"path":"https://css4s.github.io/socmod/reference/LearningStrategy.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"LearningStrategy — LearningStrategy","text":"","code":"LearningStrategy$get_label()"},{"path":"https://css4s.github.io/socmod/reference/LearningStrategy.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"LearningStrategy — LearningStrategy","text":"Character string","code":""},{"path":"https://css4s.github.io/socmod/reference/LearningStrategy.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"LearningStrategy — LearningStrategy","text":"objects class cloneable method.","code":""},{"path":"https://css4s.github.io/socmod/reference/LearningStrategy.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"LearningStrategy — LearningStrategy","text":"","code":"LearningStrategy$clone(deep = FALSE)"},{"path":"https://css4s.github.io/socmod/reference/LearningStrategy.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"LearningStrategy — LearningStrategy","text":"deep Whether make deep clone.","code":""},{"path":"https://css4s.github.io/socmod/reference/ModelParameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Overwrite existing auxiliary parameters. — ModelParameters","title":"Overwrite existing auxiliary parameters. — ModelParameters","text":"Overwrite existing auxiliary parameters. Overwrite existing auxiliary parameters.","code":""},{"path":"https://css4s.github.io/socmod/reference/ModelParameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Overwrite existing auxiliary parameters. — ModelParameters","text":"NULL Add key-value pair auxiliary variables. NULL Add list key-value pairs aux params.","code":""},{"path":[]},{"path":"https://css4s.github.io/socmod/reference/ModelParameters.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Overwrite existing auxiliary parameters. — ModelParameters","text":"ModelParameters$new() ModelParameters$get_learning_strategy() ModelParameters$get_graph() ModelParameters$set_graph() ModelParameters$get_n_agents() ModelParameters$set_n_agents() ModelParameters$get_auxiliary() ModelParameters$set_auxiliary() ModelParameters$add_auxiliary() ModelParameters$as_list() ModelParameters$clone()","code":""},{"path":[]},{"path":"https://css4s.github.io/socmod/reference/ModelParameters.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Overwrite existing auxiliary parameters. — ModelParameters","text":"","code":"ModelParameters$new(   learning_strategy = success_bias_strategy,   graph = NULL,   n_agents = NULL,   auxiliary = list() )"},{"path":[]},{"path":"https://css4s.github.io/socmod/reference/ModelParameters.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Overwrite existing auxiliary parameters. — ModelParameters","text":"","code":"ModelParameters$get_learning_strategy()"},{"path":[]},{"path":"https://css4s.github.io/socmod/reference/ModelParameters.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Overwrite existing auxiliary parameters. — ModelParameters","text":"","code":"ModelParameters$get_graph()"},{"path":[]},{"path":"https://css4s.github.io/socmod/reference/ModelParameters.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Overwrite existing auxiliary parameters. — ModelParameters","text":"","code":"ModelParameters$set_graph(graph)"},{"path":[]},{"path":"https://css4s.github.io/socmod/reference/ModelParameters.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Overwrite existing auxiliary parameters. — ModelParameters","text":"","code":"ModelParameters$get_n_agents()"},{"path":[]},{"path":"https://css4s.github.io/socmod/reference/ModelParameters.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Overwrite existing auxiliary parameters. — ModelParameters","text":"","code":"ModelParameters$set_n_agents(n_agents)"},{"path":[]},{"path":"https://css4s.github.io/socmod/reference/ModelParameters.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Overwrite existing auxiliary parameters. — ModelParameters","text":"","code":"ModelParameters$get_auxiliary()"},{"path":[]},{"path":"https://css4s.github.io/socmod/reference/ModelParameters.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Overwrite existing auxiliary parameters. — ModelParameters","text":"","code":"ModelParameters$set_auxiliary(params)"},{"path":[]},{"path":"https://css4s.github.io/socmod/reference/ModelParameters.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Overwrite existing auxiliary parameters. — ModelParameters","text":"","code":"ModelParameters$add_auxiliary(key, value)"},{"path":[]},{"path":"https://css4s.github.io/socmod/reference/ModelParameters.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Overwrite existing auxiliary parameters. — ModelParameters","text":"","code":"ModelParameters$as_list()"},{"path":"https://css4s.github.io/socmod/reference/ModelParameters.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Overwrite existing auxiliary parameters. — ModelParameters","text":"objects class cloneable method.","code":""},{"path":"https://css4s.github.io/socmod/reference/ModelParameters.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Overwrite existing auxiliary parameters. — ModelParameters","text":"","code":"ModelParameters$clone(deep = FALSE)"},{"path":"https://css4s.github.io/socmod/reference/ModelParameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Overwrite existing auxiliary parameters. — ModelParameters","text":"deep Whether make deep clone.","code":""},{"path":"https://css4s.github.io/socmod/reference/Neighbors.html","id":null,"dir":"Reference","previous_headings":"","what":"Neighbors class — Neighbors","title":"Neighbors class — Neighbors","text":"Neighbors class Neighbors class","code":""},{"path":"https://css4s.github.io/socmod/reference/Neighbors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Neighbors class — Neighbors","text":"list return values applications .f","code":""},{"path":"https://css4s.github.io/socmod/reference/Neighbors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Neighbors class — Neighbors","text":"container agent's neighbors, utilities iteration, filtering, sampling, modification.","code":""},{"path":[]},{"path":"https://css4s.github.io/socmod/reference/Neighbors.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Neighbors class — Neighbors","text":"Neighbors$new() Neighbors$map() Neighbors$length() Neighbors$get() Neighbors$filter() Neighbors$sample() Neighbors$add() Neighbors$remove() Neighbors$clone()","code":""},{"path":[]},{"path":"https://css4s.github.io/socmod/reference/Neighbors.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Neighbors class — Neighbors","text":"","code":"Neighbors$new(agents = list())"},{"path":[]},{"path":"https://css4s.github.io/socmod/reference/Neighbors.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Neighbors class — Neighbors","text":"","code":"Neighbors$map(.f)"},{"path":"https://css4s.github.io/socmod/reference/Neighbors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Neighbors class — Neighbors","text":".f Function apply neighbor agent","code":""},{"path":"https://css4s.github.io/socmod/reference/Neighbors.html","id":"method-length-","dir":"Reference","previous_headings":"","what":"Method length()","title":"Neighbors class — Neighbors","text":"Number neighbor agents, .e., length neighbors agent list.","code":""},{"path":"https://css4s.github.io/socmod/reference/Neighbors.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Neighbors class — Neighbors","text":"","code":"Neighbors$length()"},{"path":"https://css4s.github.io/socmod/reference/Neighbors.html","id":"method-get-","dir":"Reference","previous_headings":"","what":"Method get()","title":"Neighbors class — Neighbors","text":"Get neighbor index name","code":""},{"path":"https://css4s.github.io/socmod/reference/Neighbors.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Neighbors class — Neighbors","text":"","code":"Neighbors$get(key)"},{"path":"https://css4s.github.io/socmod/reference/Neighbors.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Neighbors class — Neighbors","text":"key integer index character name neighbor","code":""},{"path":"https://css4s.github.io/socmod/reference/Neighbors.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Neighbors class — Neighbors","text":"Agent instance","code":""},{"path":"https://css4s.github.io/socmod/reference/Neighbors.html","id":"method-filter-","dir":"Reference","previous_headings":"","what":"Method filter()","title":"Neighbors class — Neighbors","text":"Filter neighbors using predicate function","code":""},{"path":"https://css4s.github.io/socmod/reference/Neighbors.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Neighbors class — Neighbors","text":"","code":"Neighbors$filter(predicate)"},{"path":"https://css4s.github.io/socmod/reference/Neighbors.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Neighbors class — Neighbors","text":"predicate function taking Agent returning TRUE FALSE","code":""},{"path":"https://css4s.github.io/socmod/reference/Neighbors.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Neighbors class — Neighbors","text":"new Neighbors object containing filtered agents Sample one neighbors","code":""},{"path":[]},{"path":"https://css4s.github.io/socmod/reference/Neighbors.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Neighbors class — Neighbors","text":"","code":"Neighbors$sample(n = 1, replace = FALSE, weights = NULL)"},{"path":"https://css4s.github.io/socmod/reference/Neighbors.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Neighbors class — Neighbors","text":"n Number neighbors sample replace Logical: sample replacement? weights Either numeric vector function returning weights agent","code":""},{"path":"https://css4s.github.io/socmod/reference/Neighbors.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Neighbors class — Neighbors","text":"Neighbors object single Agent depending n","code":""},{"path":"https://css4s.github.io/socmod/reference/Neighbors.html","id":"method-add-","dir":"Reference","previous_headings":"","what":"Method add()","title":"Neighbors class — Neighbors","text":"Add one agents neighbors list","code":""},{"path":"https://css4s.github.io/socmod/reference/Neighbors.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Neighbors class — Neighbors","text":"","code":"Neighbors$add(...)"},{"path":"https://css4s.github.io/socmod/reference/Neighbors.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Neighbors class — Neighbors","text":"... Agent objects add","code":""},{"path":"https://css4s.github.io/socmod/reference/Neighbors.html","id":"method-remove-","dir":"Reference","previous_headings":"","what":"Method remove()","title":"Neighbors class — Neighbors","text":"Remove one agents neighbors list","code":""},{"path":"https://css4s.github.io/socmod/reference/Neighbors.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Neighbors class — Neighbors","text":"","code":"Neighbors$remove(...)"},{"path":"https://css4s.github.io/socmod/reference/Neighbors.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Neighbors class — Neighbors","text":"... Agent objects remove","code":""},{"path":"https://css4s.github.io/socmod/reference/Neighbors.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Neighbors class — Neighbors","text":"objects class cloneable method.","code":""},{"path":"https://css4s.github.io/socmod/reference/Neighbors.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Neighbors class — Neighbors","text":"","code":"Neighbors$clone(deep = FALSE)"},{"path":"https://css4s.github.io/socmod/reference/Neighbors.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Neighbors class — Neighbors","text":"deep Whether make deep clone.","code":""},{"path":"https://css4s.github.io/socmod/reference/Trial.html","id":null,"dir":"Reference","previous_headings":"","what":"Trial class for running a single simulation — Trial","title":"Trial class for running a single simulation — Trial","text":"Trial class running single simulation Trial class running single simulation","code":""},{"path":"https://css4s.github.io/socmod/reference/Trial.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Trial class for running a single simulation — Trial","text":"Represents single run AgentBasedModel time, customizable interaction update logic. Tracks time-series observations outcome measures adaptation success steps fixation.","code":""},{"path":[]},{"path":"https://css4s.github.io/socmod/reference/Trial.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Trial class for running a single simulation — Trial","text":"Trial$new() Trial$run() Trial$add_metadata() Trial$get_metadata() Trial$get_observations() Trial$get_outcomes() Trial$get_label() Trial$clone()","code":""},{"path":"https://css4s.github.io/socmod/reference/Trial.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Trial class for running a single simulation — Trial","text":"Initialize Trial model functions","code":""},{"path":"https://css4s.github.io/socmod/reference/Trial.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trial class for running a single simulation — Trial","text":"","code":"Trial$new(model, metadata = list())"},{"path":"https://css4s.github.io/socmod/reference/Trial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trial class for running a single simulation — Trial","text":"model AgentBasedModel instance metadata Label-value metadata store trial information","code":""},{"path":"https://css4s.github.io/socmod/reference/Trial.html","id":"method-run-","dir":"Reference","previous_headings":"","what":"Method run()","title":"Trial class for running a single simulation — Trial","text":"Run model collect results","code":""},{"path":"https://css4s.github.io/socmod/reference/Trial.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Trial class for running a single simulation — Trial","text":"","code":"Trial$run(   stop = 50,   legacy_behavior = \"Legacy\",   adaptive_behavior = \"Adaptive\" )"},{"path":"https://css4s.github.io/socmod/reference/Trial.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trial class for running a single simulation — Trial","text":"stop Either integer max steps, predicate function legacy_behavior maladaptive behavior treated \"adaptation failure\" adaptive_behavior behavior treated \"adaptation success\" Add update metadata Trial object","code":""},{"path":[]},{"path":"https://css4s.github.io/socmod/reference/Trial.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Trial class for running a single simulation — Trial","text":"","code":"Trial$add_metadata(new_metadata)"},{"path":"https://css4s.github.io/socmod/reference/Trial.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trial class for running a single simulation — Trial","text":"new_metadata named list merge existing metadata self Trial object","code":""},{"path":"https://css4s.github.io/socmod/reference/Trial.html","id":"method-get-metadata-","dir":"Reference","previous_headings":"","what":"Method get_metadata()","title":"Trial class for running a single simulation — Trial","text":"Return trial's metadata named list.","code":""},{"path":"https://css4s.github.io/socmod/reference/Trial.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Trial class for running a single simulation — Trial","text":"","code":"Trial$get_metadata()"},{"path":"https://css4s.github.io/socmod/reference/Trial.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Trial class for running a single simulation — Trial","text":"named list containing metadata values trial, including scalar function-valued inputs specified setup.","code":""},{"path":"https://css4s.github.io/socmod/reference/Trial.html","id":"method-get-observations-","dir":"Reference","previous_headings":"","what":"Method get_observations()","title":"Trial class for running a single simulation — Trial","text":"Return observation data","code":""},{"path":"https://css4s.github.io/socmod/reference/Trial.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Trial class for running a single simulation — Trial","text":"","code":"Trial$get_observations()"},{"path":"https://css4s.github.io/socmod/reference/Trial.html","id":"method-get-outcomes-","dir":"Reference","previous_headings":"","what":"Method get_outcomes()","title":"Trial class for running a single simulation — Trial","text":"Return outcome measures","code":""},{"path":"https://css4s.github.io/socmod/reference/Trial.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Trial class for running a single simulation — Trial","text":"","code":"Trial$get_outcomes()"},{"path":"https://css4s.github.io/socmod/reference/Trial.html","id":"method-get-label-","dir":"Reference","previous_headings":"","what":"Method get_label()","title":"Trial class for running a single simulation — Trial","text":"Return label trial (set)","code":""},{"path":"https://css4s.github.io/socmod/reference/Trial.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Trial class for running a single simulation — Trial","text":"","code":"Trial$get_label()"},{"path":"https://css4s.github.io/socmod/reference/Trial.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Trial class for running a single simulation — Trial","text":"objects class cloneable method.","code":""},{"path":"https://css4s.github.io/socmod/reference/Trial.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Trial class for running a single simulation — Trial","text":"","code":"Trial$clone(deep = FALSE)"},{"path":"https://css4s.github.io/socmod/reference/Trial.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trial class for running a single simulation — Trial","text":"deep Whether make deep clone.","code":""},{"path":"https://css4s.github.io/socmod/reference/add_unique_edge.html","id":null,"dir":"Reference","previous_headings":"","what":"Add an undirected edge from v1 to v2 to graph g if it does not already exist. — add_unique_edge","title":"Add an undirected edge from v1 to v2 to graph g if it does not already exist. — add_unique_edge","text":"Add undirected edge v1 v2 graph g already exist.","code":""},{"path":"https://css4s.github.io/socmod/reference/add_unique_edge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add an undirected edge from v1 to v2 to graph g if it does not already exist. — add_unique_edge","text":"","code":"add_unique_edge(g, v1, v2)"},{"path":"https://css4s.github.io/socmod/reference/add_unique_edge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add an undirected edge from v1 to v2 to graph g if it does not already exist. — add_unique_edge","text":"g Graph representing social network v1 First node edge pair v2 Second node edge pair","code":""},{"path":"https://css4s.github.io/socmod/reference/add_unique_edge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add an undirected edge from v1 to v2 to graph g if it does not already exist. — add_unique_edge","text":"igraph Graph","code":""},{"path":"https://css4s.github.io/socmod/reference/add_unique_edge.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add an undirected edge from v1 to v2 to graph g if it does not already exist. — add_unique_edge","text":"","code":"# Add one unique edge between nodes 1 and 4 to empty ten-node network g <- igraph::make_empty_graph(n = 10) g <- add_unique_edge(g, 1, 4)"},{"path":"https://css4s.github.io/socmod/reference/compare_friendship_paradox.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare Friendship Paradox in a Network — compare_friendship_paradox","title":"Compare Friendship Paradox in a Network — compare_friendship_paradox","text":"node, compares number friends (degree) mean number friends among neighbors. Calculates proportion nodes fewer friends average friends (friendship paradox).","code":""},{"path":"https://css4s.github.io/socmod/reference/compare_friendship_paradox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare Friendship Paradox in a Network — compare_friendship_paradox","text":"","code":"compare_friendship_paradox(graph, return_node_data = FALSE)"},{"path":"https://css4s.github.io/socmod/reference/compare_friendship_paradox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare Friendship Paradox in a Network — compare_friendship_paradox","text":"graph igraph tidygraph::tbl_graph object representing undirected network. return_node_data Logical. TRUE, includes data frame node-level results.","code":""},{"path":"https://css4s.github.io/socmod/reference/compare_friendship_paradox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare Friendship Paradox in a Network — compare_friendship_paradox","text":"list : paradox_proportion: Proportion nodes experiencing friendship paradox summary: data frame average degree average neighbor degree nodes: (Optional) data frame node-level metrics return_node_data = TRUE","code":""},{"path":"https://css4s.github.io/socmod/reference/compare_friendship_paradox.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compare Friendship Paradox in a Network — compare_friendship_paradox","text":"Supports igraph tidygraph::tbl_graph inputs.","code":""},{"path":"https://css4s.github.io/socmod/reference/compare_friendship_paradox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare Friendship Paradox in a Network — compare_friendship_paradox","text":"","code":"if (FALSE) { # \\dontrun{ # Use with an igraph network library(igraph) g_ig <- simulate_feld_1991() compare_friendship_paradox(g_ig)  # Return node-level metrics too result2 <- compare_friendship_paradox(g, return_node_data = TRUE) head(result2$nodes) } # }"},{"path":"https://css4s.github.io/socmod/reference/contagion_interaction.html","id":null,"dir":"Reference","previous_headings":"","what":"Contagion-based interaction — contagion_interaction","title":"Contagion-based interaction — contagion_interaction","text":"Updates learner behavior based interaction Adaptive neighbor.","code":""},{"path":"https://css4s.github.io/socmod/reference/contagion_interaction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Contagion-based interaction — contagion_interaction","text":"","code":"contagion_interaction(learner, teacher, model)"},{"path":"https://css4s.github.io/socmod/reference/contagion_interaction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Contagion-based interaction — contagion_interaction","text":"learner Agent instance. teacher Agent instance. model AgentBasedModel instance parameter \"adopt_rate\".","code":""},{"path":"https://css4s.github.io/socmod/reference/contagion_interaction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Contagion-based interaction — contagion_interaction","text":"None. Modifies learner's next behavior fitness.","code":""},{"path":"https://css4s.github.io/socmod/reference/contagion_interaction.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Contagion-based interaction — contagion_interaction","text":"","code":"model <- example_model_with_params(list(adopt_rate = 1.0)) #> Error in example_model_with_params(list(adopt_rate = 1)): could not find function \"example_model_with_params\" learner <- model$get_agent(1) #> Error: object 'model' not found teacher <- model$get_agent(2) #> Error: object 'model' not found learner$set_behavior(\"Legacy\") #> Error: object 'learner' not found teacher$set_behavior(\"Adaptive\") #> Error: object 'teacher' not found contagion_interaction(learner, teacher, model) #> Error: object 'model' not found"},{"path":"https://css4s.github.io/socmod/reference/contagion_learning_strategy.html","id":null,"dir":"Reference","previous_headings":"","what":"Define contagion learning ","title":"Define contagion learning ","text":"Define contagion learning \"strategy\".","code":""},{"path":"https://css4s.github.io/socmod/reference/contagion_learning_strategy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define contagion learning ","text":"","code":"contagion_learning_strategy"},{"path":"https://css4s.github.io/socmod/reference/contagion_learning_strategy.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Define contagion learning ","text":"object class LearningStrategy (inherits R6) length 7.","code":""},{"path":"https://css4s.github.io/socmod/reference/contagion_model_step.html","id":null,"dir":"Reference","previous_headings":"","what":"Contagion model step — contagion_model_step","title":"Contagion model step — contagion_model_step","text":"Updates agents dropping behavior advances model state.","code":""},{"path":"https://css4s.github.io/socmod/reference/contagion_model_step.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Contagion model step — contagion_model_step","text":"","code":"contagion_model_step(model)"},{"path":"https://css4s.github.io/socmod/reference/contagion_model_step.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Contagion model step — contagion_model_step","text":"model AgentBasedModel instance parameter \"drop_rate\".","code":""},{"path":"https://css4s.github.io/socmod/reference/contagion_model_step.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Contagion model step — contagion_model_step","text":"None. Updates agent behaviors.","code":""},{"path":"https://css4s.github.io/socmod/reference/contagion_partner_selection.html","id":null,"dir":"Reference","previous_headings":"","what":"Contagion-based partner selection — contagion_partner_selection","title":"Contagion-based partner selection — contagion_partner_selection","text":"Selects one neighbor random potential contagion interaction.","code":""},{"path":"https://css4s.github.io/socmod/reference/contagion_partner_selection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Contagion-based partner selection — contagion_partner_selection","text":"","code":"contagion_partner_selection(learner, model)"},{"path":"https://css4s.github.io/socmod/reference/contagion_partner_selection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Contagion-based partner selection — contagion_partner_selection","text":"learner Agent instance. model AgentBasedModel instance.","code":""},{"path":"https://css4s.github.io/socmod/reference/contagion_partner_selection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Contagion-based partner selection — contagion_partner_selection","text":"single neighbor Agent.","code":""},{"path":"https://css4s.github.io/socmod/reference/contagion_partner_selection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Contagion-based partner selection — contagion_partner_selection","text":"","code":"model <- example_model_with_params() #> Error in example_model_with_params(): could not find function \"example_model_with_params\" learner <- model$get_agent(1) #> Error: object 'model' not found contagion_partner_selection(learner, model) #> Error: object 'learner' not found"},{"path":"https://css4s.github.io/socmod/reference/dummy_learning_strategy.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a dummy learning strategy for mockups and testing. — dummy_learning_strategy","title":"Make a dummy learning strategy for mockups and testing. — dummy_learning_strategy","text":"Make dummy learning strategy mockups testing.","code":""},{"path":"https://css4s.github.io/socmod/reference/dummy_learning_strategy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a dummy learning strategy for mockups and testing. — dummy_learning_strategy","text":"","code":"dummy_learning_strategy()"},{"path":"https://css4s.github.io/socmod/reference/fixated.html","id":null,"dir":"Reference","previous_headings":"","what":"Predicate function: has the model fixated on a single behavior? — fixated","title":"Predicate function: has the model fixated on a single behavior? — fixated","text":"Predicate function: model fixated single behavior?","code":""},{"path":"https://css4s.github.io/socmod/reference/fixated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predicate function: has the model fixated on a single behavior? — fixated","text":"","code":"fixated(model)"},{"path":"https://css4s.github.io/socmod/reference/fixated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predicate function: has the model fixated on a single behavior? — fixated","text":"model AgentBasedModel","code":""},{"path":"https://css4s.github.io/socmod/reference/fixated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predicate function: has the model fixated on a single behavior? — fixated","text":"TRUE agents behavior","code":""},{"path":"https://css4s.github.io/socmod/reference/fixated.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predicate function: has the model fixated on a single behavior? — fixated","text":"","code":"agents <- list(   Agent$new(name = \"1\", behavior = \"Legacy\", fitness = 1),   Agent$new(name = \"2\", behavior = \"Adaptive\", fitness = 4) ) #> Error in initialize(...): argument \"id\" is missing, with no default net <- igraph::make_graph(~ 1-2) model <- AgentBasedModel$new(agents = agents, graph = net) #> Error in initialize(...): unused argument (graph = list(2, FALSE, 1, 0, NULL, NULL, NULL, NULL, list(c(1, 0, 1), list(), list(c(\"1\", \"2\")), list()), <environment>)) trial <- run_trial(model, stop = fixated) # <- \"stop trial when fixated\" #> Error: object 'model' not found"},{"path":"https://css4s.github.io/socmod/reference/frequency_bias_interact.html","id":null,"dir":"Reference","previous_headings":"","what":"Interaction function for frequency-biased adaptive learning. — frequency_bias_interact","title":"Interaction function for frequency-biased adaptive learning. — frequency_bias_interact","text":"Interaction function frequency-biased adaptive learning.","code":""},{"path":"https://css4s.github.io/socmod/reference/frequency_bias_interact.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interaction function for frequency-biased adaptive learning. — frequency_bias_interact","text":"","code":"frequency_bias_interact(learner, ., model)"},{"path":"https://css4s.github.io/socmod/reference/frequency_bias_interact.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interaction function for frequency-biased adaptive learning. — frequency_bias_interact","text":"learner Agent currently selected learner. . used (teacher frequency bias). model ABM instance","code":""},{"path":"https://css4s.github.io/socmod/reference/frequency_bias_learning_strategy.html","id":null,"dir":"Reference","previous_headings":"","what":"Define frequency-biased learning strategy. — frequency_bias_learning_strategy","title":"Define frequency-biased learning strategy. — frequency_bias_learning_strategy","text":"Define frequency-biased learning strategy.","code":""},{"path":"https://css4s.github.io/socmod/reference/frequency_bias_learning_strategy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define frequency-biased learning strategy. — frequency_bias_learning_strategy","text":"","code":"frequency_bias_learning_strategy"},{"path":"https://css4s.github.io/socmod/reference/frequency_bias_learning_strategy.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Define frequency-biased learning strategy. — frequency_bias_learning_strategy","text":"object class LearningStrategy (inherits R6) length 7.","code":""},{"path":"https://css4s.github.io/socmod/reference/frequency_bias_select_teacher.html","id":null,"dir":"Reference","previous_headings":"","what":"Frequency biased teacher selection does nothing — frequency_bias_select_teacher","title":"Frequency biased teacher selection does nothing — frequency_bias_select_teacher","text":"Frequency biased teacher selection nothing","code":""},{"path":"https://css4s.github.io/socmod/reference/frequency_bias_select_teacher.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Frequency biased teacher selection does nothing — frequency_bias_select_teacher","text":"","code":"frequency_bias_select_teacher(agent, model)"},{"path":"https://css4s.github.io/socmod/reference/get_all_possible_edges.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all possible edges between node indices 1 to N for either directed or undirected networks. — get_all_possible_edges","title":"Get all possible edges between node indices 1 to N for either directed or undirected networks. — get_all_possible_edges","text":"Get possible edges node indices 1 N either directed undirected networks.","code":""},{"path":"https://css4s.github.io/socmod/reference/get_all_possible_edges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all possible edges between node indices 1 to N for either directed or undirected networks. — get_all_possible_edges","text":"","code":"get_all_possible_edges(N, directed = FALSE)"},{"path":"https://css4s.github.io/socmod/reference/get_all_possible_edges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all possible edges between node indices 1 to N for either directed or undirected networks. — get_all_possible_edges","text":"N number nodes directed Whether possible edges directed graphs","code":""},{"path":"https://css4s.github.io/socmod/reference/get_all_possible_edges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all possible edges between node indices 1 to N for either directed or undirected networks. — get_all_possible_edges","text":"table node pairs representing edges","code":""},{"path":"https://css4s.github.io/socmod/reference/get_all_possible_edges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get all possible edges between node indices 1 to N for either directed or undirected networks. — get_all_possible_edges","text":"","code":"# Get a table of vertex pairs representing possible edges with ten vertices. Epossible <- get_all_possible_edges(10)"},{"path":"https://css4s.github.io/socmod/reference/get_feld_1991_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Feld's 1991 data. — get_feld_1991_network","title":"Load Feld's 1991 data. — get_feld_1991_network","text":"Load Feld's 1991 data.","code":""},{"path":"https://css4s.github.io/socmod/reference/get_feld_1991_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Feld's 1991 data. — get_feld_1991_network","text":"","code":"get_feld_1991_network()"},{"path":"https://css4s.github.io/socmod/reference/ggnetplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Command that operates like ggplot — ggnetplot","title":"Command that operates like ggplot — ggnetplot","text":"Command operates like ggplot","code":""},{"path":"https://css4s.github.io/socmod/reference/ggnetplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Command that operates like ggplot — ggnetplot","text":"","code":"ggnetplot(net, layout = NULL, ...)"},{"path":"https://css4s.github.io/socmod/reference/ggnetplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Command that operates like ggplot — ggnetplot","text":"net Network plot layout Optional igraph-style plotting layout ... Additional key-value aesthetics pass aes() ggplot call","code":""},{"path":"https://css4s.github.io/socmod/reference/ggnetplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Command that operates like ggplot — ggnetplot","text":"ggplot()-like command initiating ggplot2 network plots","code":""},{"path":"https://css4s.github.io/socmod/reference/ggnetplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Command that operates like ggplot — ggnetplot","text":"","code":"library(ggnetwork) #> Loading required package: ggplot2 socnet <- igraph::make_graph(~ 1-2:3:4,2:4) igraph::V(socnet)$name <- c(\"Mateus\", \"Marcos\", \"Lucas\", \"João\") ggnetplot(socnet) +    geom_edges(linewidth=0.1) +    geom_nodes(color = \"#008566\", size=3) +    geom_nodelabel_repel(aes(label = name), size = 1.5) +    theme_blank()"},{"path":"https://css4s.github.io/socmod/reference/iterate_learning_model.html","id":null,"dir":"Reference","previous_headings":"","what":"A generic method for iterating a learning model, setting the current behavior and fitness to be whatever was identified as the next behavior and fitness. — iterate_learning_model","title":"A generic method for iterating a learning model, setting the current behavior and fitness to be whatever was identified as the next behavior and fitness. — iterate_learning_model","text":"generic method iterating learning model, setting current behavior fitness whatever identified next behavior fitness.","code":""},{"path":"https://css4s.github.io/socmod/reference/iterate_learning_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A generic method for iterating a learning model, setting the current behavior and fitness to be whatever was identified as the next behavior and fitness. — iterate_learning_model","text":"","code":"iterate_learning_model(model)"},{"path":"https://css4s.github.io/socmod/reference/iterate_learning_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A generic method for iterating a learning model, setting the current behavior and fitness to be whatever was identified as the next behavior and fitness. — iterate_learning_model","text":"NULL Operates -place update agent's behavior necessary.","code":""},{"path":"https://css4s.github.io/socmod/reference/learning_model_step.html","id":null,"dir":"Reference","previous_headings":"","what":"More modern v0.1 alias for iterate_learning_model. — learning_model_step","title":"More modern v0.1 alias for iterate_learning_model. — learning_model_step","text":"modern v0.1 alias iterate_learning_model.","code":""},{"path":"https://css4s.github.io/socmod/reference/learning_model_step.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"More modern v0.1 alias for iterate_learning_model. — learning_model_step","text":"","code":"learning_model_step(model)"},{"path":"https://css4s.github.io/socmod/reference/load_igraph_from_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Load an Undirected igraph Object from a CSV Edge List — load_igraph_from_csv","title":"Load an Undirected igraph Object from a CSV Edge List — load_igraph_from_csv","text":"Loads graph CSV file containing two-column edge list. Assumes columns either , source target.","code":""},{"path":"https://css4s.github.io/socmod/reference/load_igraph_from_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load an Undirected igraph Object from a CSV Edge List — load_igraph_from_csv","text":"","code":"load_igraph_from_csv(csv_file)"},{"path":"https://css4s.github.io/socmod/reference/load_igraph_from_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load an Undirected igraph Object from a CSV Edge List — load_igraph_from_csv","text":"csv_file Path CSV file two columns representing edges.","code":""},{"path":"https://css4s.github.io/socmod/reference/load_igraph_from_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load an Undirected igraph Object from a CSV Edge List — load_igraph_from_csv","text":"undirected igraph object.","code":""},{"path":"https://css4s.github.io/socmod/reference/load_igraph_from_csv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load an Undirected igraph Object from a CSV Edge List — load_igraph_from_csv","text":"","code":"fnet <- load_igraph_from_csv(\"marketville-friends-coleman-feld.csv\") #> Error in load_igraph_from_csv(\"marketville-friends-coleman-feld.csv\"): File does not exist: marketville-friends-coleman-feld.csv"},{"path":"https://css4s.github.io/socmod/reference/make_abm.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to create a new agent-based model — make_abm","title":"Helper function to create a new agent-based model — make_abm","text":"Helper function create new agent-based model","code":""},{"path":"https://css4s.github.io/socmod/reference/make_abm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to create a new agent-based model — make_abm","text":"","code":"make_abm(model_parameters = NULL, agents = NULL)"},{"path":"https://css4s.github.io/socmod/reference/make_abm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to create a new agent-based model — make_abm","text":"model_parameters ModelParameters instance specifying context agents List Agents","code":""},{"path":"https://css4s.github.io/socmod/reference/make_abm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to create a new agent-based model — make_abm","text":"AgentBasedModel specified parameters agents","code":""},{"path":"https://css4s.github.io/socmod/reference/make_abm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function to create a new agent-based model — make_abm","text":"","code":"abm <- make_abm(make_model_parameters(n_agents = 10))"},{"path":"https://css4s.github.io/socmod/reference/make_homophily_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an undirected asymmetric homophily network. — make_homophily_network","title":"Create an undirected asymmetric homophily network. — make_homophily_network","text":"Creates network arbitrary number groups arbitrary size arbitrary homophily levels. Homophily can take values -1 (totally anti-homophilous) +1 (totally homophilous), 0 indicates equal probability connecting within group groups. algorithm builds network first assigning within-group edges.","code":""},{"path":"https://css4s.github.io/socmod/reference/make_homophily_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an undirected asymmetric homophily network. — make_homophily_network","text":"","code":"make_homophily_network(   group_sizes = c(3, 7),   mean_degree = 2,   homophily = c(0),   group_names = NULL,   add_to_complete = FALSE )"},{"path":"https://css4s.github.io/socmod/reference/make_homophily_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an undirected asymmetric homophily network. — make_homophily_network","text":"group_sizes population (size) group mean_degree Desired mean degree homophily Singleton vector; vector must length group_sizes group_names Optional parameter specify group names add_to_complete Boolean specify whether complete network one group left needing -edges","code":""},{"path":"https://css4s.github.io/socmod/reference/make_homophily_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an undirected asymmetric homophily network. — make_homophily_network","text":"igraph Graph","code":""},{"path":"https://css4s.github.io/socmod/reference/make_homophily_network.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an undirected asymmetric homophily network. — make_homophily_network","text":"","code":"# Two groups size 5 and 10. hnet_2grp <- make_homophily_network(c(5, 10), mean_degree = 3, homophily = 0.5) plot_homophilynet(hnet_2grp)   # Five groups all size 5 with out-group preference (neg. homophily). hnet_5grp <- make_homophily_network(rep(5, 5), mean_degree = 2, homophily = -0.5) plot_homophilynet(hnet_5grp)"},{"path":"https://css4s.github.io/socmod/reference/make_learning_strategy.html","id":null,"dir":"Reference","previous_headings":"","what":"Factory function for creating a LearningStrategy — make_learning_strategy","title":"Factory function for creating a LearningStrategy — make_learning_strategy","text":"Factory function creating LearningStrategy","code":""},{"path":"https://css4s.github.io/socmod/reference/make_learning_strategy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Factory function for creating a LearningStrategy — make_learning_strategy","text":"","code":"make_learning_strategy(   partner_selection,   interaction,   model_step = NULL,   label = \"unlabelled\" )"},{"path":"https://css4s.github.io/socmod/reference/make_learning_strategy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Factory function for creating a LearningStrategy — make_learning_strategy","text":"partner_selection Function select partner focal_agent model. interaction Function interaction focal_agent partner model. model_step Step function model run agents select partner interact. label Character label strategy.","code":""},{"path":"https://css4s.github.io/socmod/reference/make_learning_strategy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Factory function for creating a LearningStrategy — make_learning_strategy","text":"LearningStrategy instance containing social update functions metadata-friendly label.","code":""},{"path":"https://css4s.github.io/socmod/reference/make_learning_strategy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Factory function for creating a LearningStrategy — make_learning_strategy","text":"","code":"success_bias_strategy <- make_learning_strategy(   partner_selection = success_bias_select_teacher,   interaction = success_bias_interact,   label = \"Success-biased\" ) # Mock a partner selection, interaction, and model step to show custom use. mock_selection <- function (focal_agent) NULL mock_interaction <- function (focal_agent, partner, model) NULL mock_model_step <- function (model) NULL mock_strategy <- make_learning_strategy(mock_selection, mock_interaction,                                         mock_model_step, label = \"mock\") # Note make_learning_strategy wraps the R6 class constructor: mock_strategy_2 <- LearningStrategy$new(mock_selection, mock_interaction,                                         mock_model_step, mock_strategy)"},{"path":"https://css4s.github.io/socmod/reference/make_model_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper for initializing new ModelParameters instance. — make_model_parameters","title":"Wrapper for initializing new ModelParameters instance. — make_model_parameters","text":"Wrapper initializing new ModelParameters instance.","code":""},{"path":"https://css4s.github.io/socmod/reference/make_model_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper for initializing new ModelParameters instance. — make_model_parameters","text":"","code":"make_model_parameters(   learning_strategy = success_bias_learning_strategy,   graph = NULL,   n_agents = NULL,   ... )"},{"path":"https://css4s.github.io/socmod/reference/make_model_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper for initializing new ModelParameters instance. — make_model_parameters","text":"learning_strategy Learning strategy use; must type LearningStrategy graph Graph object use; must inherit igraph n_agents Number agents model ... Additional model parameters","code":""},{"path":"https://css4s.github.io/socmod/reference/make_model_parameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrapper for initializing new ModelParameters instance. — make_model_parameters","text":"","code":"# example code"},{"path":"https://css4s.github.io/socmod/reference/make_preferential_attachment.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a preferential attachment network. — make_preferential_attachment","title":"Make a preferential attachment network. — make_preferential_attachment","text":"Make simple preferential attachment network N nodes, starting two nodes adding one node per network construction step.","code":""},{"path":"https://css4s.github.io/socmod/reference/make_preferential_attachment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a preferential attachment network. — make_preferential_attachment","text":"","code":"make_preferential_attachment(N)"},{"path":"https://css4s.github.io/socmod/reference/make_preferential_attachment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a preferential attachment network. — make_preferential_attachment","text":"N population size","code":""},{"path":"https://css4s.github.io/socmod/reference/make_preferential_attachment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a preferential attachment network. — make_preferential_attachment","text":"igraph::graph","code":""},{"path":"https://css4s.github.io/socmod/reference/make_regular_lattice.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a regular lattice graph. — make_regular_lattice","title":"Create a regular lattice graph. — make_regular_lattice","text":"Adapted https://github.com/USCCANA/netdiffuseR/blob/1efc0be4539d23ab800187c73551624834038e00/src/rgraph.cpp#L90 Difference use undirected now, need adjust default (see also NetLogo routine Smaldino Ch. 9 p. 266). igraph flexible, add duplicate edges, check make sure edge exist two nodes adding , using igraph::are_adjacent function (\"adjacent\" means edge two nodes undirected graph–directed graph definition subjective, .e., v1 v2 sometimes defined adjacent edge v1 v2, others define adjacency edge v2 v1).","code":""},{"path":"https://css4s.github.io/socmod/reference/make_regular_lattice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a regular lattice graph. — make_regular_lattice","text":"","code":"make_regular_lattice(N, k, directed = FALSE)"},{"path":"https://css4s.github.io/socmod/reference/make_regular_lattice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a regular lattice graph. — make_regular_lattice","text":"N number nodes k node degree directed Whether graph directed","code":""},{"path":"https://css4s.github.io/socmod/reference/make_regular_lattice.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a regular lattice graph. — make_regular_lattice","text":"igraph Graph","code":""},{"path":"https://css4s.github.io/socmod/reference/make_regular_lattice.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a regular lattice graph. — make_regular_lattice","text":"","code":"# Make a 10-node lattice with nodes degree 4. net <- make_regular_lattice(10, 4) plot(net)"},{"path":"https://css4s.github.io/socmod/reference/make_small_world.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a small world network. — make_small_world","title":"Make a small world network. — make_small_world","text":"Create small-world network rewiring lattice size N, degree k.","code":""},{"path":"https://css4s.github.io/socmod/reference/make_small_world.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a small world network. — make_small_world","text":"","code":"make_small_world(N, k, p)"},{"path":"https://css4s.github.io/socmod/reference/make_small_world.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a small world network. — make_small_world","text":"N Population size k Seed lattice degree p Rewire probability","code":""},{"path":"https://css4s.github.io/socmod/reference/make_small_world.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a small world network. — make_small_world","text":"igraph::graph","code":""},{"path":"https://css4s.github.io/socmod/reference/not_adjacent.html","id":null,"dir":"Reference","previous_headings":"","what":"Check two vertices are not adjacent. — not_adjacent","title":"Check two vertices are not adjacent. — not_adjacent","text":"Check two vertices adjacent.","code":""},{"path":"https://css4s.github.io/socmod/reference/not_adjacent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check two vertices are not adjacent. — not_adjacent","text":"","code":"not_adjacent(g, v1, v2)"},{"path":"https://css4s.github.io/socmod/reference/not_adjacent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check two vertices are not adjacent. — not_adjacent","text":"g Graph v1 Vertex/agent/node 1 v2 Vertex/agent/node 2","code":""},{"path":"https://css4s.github.io/socmod/reference/not_adjacent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check two vertices are not adjacent. — not_adjacent","text":"bool indicating whether two vertices v1 v2 adjacent g","code":""},{"path":"https://css4s.github.io/socmod/reference/plot_adoption.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot adoption counts of selected behaviors over time Plot adoption counts of selected behaviors (tracked_behaviors) over time. — plot_adoption","title":"Plot adoption counts of selected behaviors over time Plot adoption counts of selected behaviors (tracked_behaviors) over time. — plot_adoption","text":"Plot adoption counts selected behaviors time Plot adoption counts selected behaviors (tracked_behaviors) time.","code":""},{"path":"https://css4s.github.io/socmod/reference/plot_adoption.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot adoption counts of selected behaviors over time Plot adoption counts of selected behaviors (tracked_behaviors) over time. — plot_adoption","text":"","code":"plot_adoption(trial, tracked_behaviors = c(\"Adaptive\"))"},{"path":"https://css4s.github.io/socmod/reference/plot_adoption.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot adoption counts of selected behaviors over time Plot adoption counts of selected behaviors (tracked_behaviors) over time. — plot_adoption","text":"trial Trial object tracked_behaviors Character vector behaviors track (e.g., c(\"Adaptive\", \"Legacy\"))","code":""},{"path":"https://css4s.github.io/socmod/reference/plot_adoption.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot adoption counts of selected behaviors over time Plot adoption counts of selected behaviors (tracked_behaviors) over time. — plot_adoption","text":"ggplot object","code":""},{"path":"https://css4s.github.io/socmod/reference/plot_friendship_paradox.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Friendship Paradox Comparison — plot_friendship_paradox","title":"Plot Friendship Paradox Comparison — plot_friendship_paradox","text":"Plots node's number friends (degree) mean number friends among friends (mean neighbor degree), 1:1 reference line. Useful visualizing strength spread friendship paradox.","code":""},{"path":"https://css4s.github.io/socmod/reference/plot_friendship_paradox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Friendship Paradox Comparison — plot_friendship_paradox","text":"","code":"plot_friendship_paradox(graph, label = FALSE, point_size = 2, ...)"},{"path":"https://css4s.github.io/socmod/reference/plot_friendship_paradox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Friendship Paradox Comparison — plot_friendship_paradox","text":"graph igraph tidygraph::tbl_graph object. label Logical. TRUE, adds node labels. point_size Size points scatterplot. ... Additional arguments passed ggplot2::geom_point().","code":""},{"path":"https://css4s.github.io/socmod/reference/plot_friendship_paradox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Friendship Paradox Comparison — plot_friendship_paradox","text":"ggplot2 object.","code":""},{"path":"https://css4s.github.io/socmod/reference/plot_friendship_paradox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Friendship Paradox Comparison — plot_friendship_paradox","text":"","code":"library(tidygraph) #>  #> Attaching package: ‘tidygraph’ #> The following object is masked from ‘package:igraph’: #>  #>     groups #> The following object is masked from ‘package:stats’: #>  #>     filter library(ggplot2)  g <- simulate_feld_1991_tbl() #> Error in simulate_feld_1991_tbl(): could not find function \"simulate_feld_1991_tbl\" plot_friendship_paradox(g) #> Error: object 'g' not found"},{"path":"https://css4s.github.io/socmod/reference/plot_homophilynet.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot homophily network where groups color nodes. — plot_homophilynet","title":"Plot homophily network where groups color nodes. — plot_homophilynet","text":"Plot homophily network groups color nodes.","code":""},{"path":"https://css4s.github.io/socmod/reference/plot_homophilynet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot homophily network where groups color nodes. — plot_homophilynet","text":"","code":"plot_homophilynet(net, node_size = 3, line_width = 0.1, theme_base_size = 10)"},{"path":"https://css4s.github.io/socmod/reference/plot_homophilynet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot homophily network where groups color nodes. — plot_homophilynet","text":"net Homophily network plot. node_size Node size plot. line_width Edge line width. theme_base_size Base font size pass ggplot theme.","code":""},{"path":"https://css4s.github.io/socmod/reference/plot_homophilynet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot homophily network where groups color nodes. — plot_homophilynet","text":"ggplot","code":""},{"path":"https://css4s.github.io/socmod/reference/plot_homophilynet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot homophily network where groups color nodes. — plot_homophilynet","text":"","code":"hnet_5grp <- make_homophily_network(rep(5, 5), mean_degree = 2, homophily = -0.5) plot_homophilynet(hnet_5grp)"},{"path":"https://css4s.github.io/socmod/reference/plot_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a summary of behavior adoption over time across trials — plot_summary","title":"Plot a summary of behavior adoption over time across trials — plot_summary","text":"Plot summary behavior adoption time across trials","code":""},{"path":"https://css4s.github.io/socmod/reference/plot_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a summary of behavior adoption over time across trials — plot_summary","text":"","code":"plot_summary(summary_df)"},{"path":"https://css4s.github.io/socmod/reference/plot_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a summary of behavior adoption over time across trials — plot_summary","text":"summary_df tibble summarise_adoption()","code":""},{"path":"https://css4s.github.io/socmod/reference/plot_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a summary of behavior adoption over time across trials — plot_summary","text":"ggplot object","code":""},{"path":"https://css4s.github.io/socmod/reference/regular_lattice.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a regular lattice graph. — regular_lattice","title":"Create a regular lattice graph. — regular_lattice","text":"Adapted https://github.com/USCCANA/netdiffuseR/blob/1efc0be4539d23ab800187c73551624834038e00/src/rgraph.cpp#L90 Difference use undirected now, need adjust default (see also NetLogo routine Smaldino Ch. 9 p. 266). Beacaus igraph flexible, add duplicate edges, check make sure edge exist two nodes adding , using igraph::are_adjacent function (\"adjacent\" means edge two nodes undirected graph–directed graph definition subjective, .e., v1 v2 sometimes defined adjacent edge v1 v2, others define adjacency edge v2 v1).","code":""},{"path":"https://css4s.github.io/socmod/reference/regular_lattice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a regular lattice graph. — regular_lattice","text":"","code":"regular_lattice(N, k, directed = FALSE)"},{"path":"https://css4s.github.io/socmod/reference/regular_lattice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a regular lattice graph. — regular_lattice","text":"N number nodes k node degree directed Whether graph directed","code":""},{"path":"https://css4s.github.io/socmod/reference/regular_lattice.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a regular lattice graph. — regular_lattice","text":"igraph Graph","code":""},{"path":"https://css4s.github.io/socmod/reference/regular_lattice.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a regular lattice graph. — regular_lattice","text":"","code":"# Make a 10-node lattice with nodes degree 4. net <- regular_lattice(10, 4) plot(net)"},{"path":"https://css4s.github.io/socmod/reference/run.html","id":null,"dir":"Reference","previous_headings":"","what":"Run an agent-based model for either a number of iterations (max_its) or until some stop condition is met (e.g., fixation). — run","title":"Run an agent-based model for either a number of iterations (max_its) or until some stop condition is met (e.g., fixation). — run","text":"Run agent-based model either number iterations (max_its) stop condition met (e.g., fixation).","code":""},{"path":"https://css4s.github.io/socmod/reference/run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run an agent-based model for either a number of iterations (max_its) or until some stop condition is met (e.g., fixation). — run","text":"","code":"run(   model,   max_its = 1,   partner_selection = partner_selection_default,   interaction = interaction_default,   iterate_model = iterate_model_default,   stop_cond = stop_cond_default )"},{"path":"https://css4s.github.io/socmod/reference/run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run an agent-based model for either a number of iterations (max_its) or until some stop condition is met (e.g., fixation). — run","text":"model  max_its  partner_selection  interaction  iterate_model  stop_cond","code":""},{"path":"https://css4s.github.io/socmod/reference/run_trial.html","id":null,"dir":"Reference","previous_headings":"","what":"Trial runner helper function — run_trial","title":"Trial runner helper function — run_trial","text":"Trial runner helper function","code":""},{"path":"https://css4s.github.io/socmod/reference/run_trial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trial runner helper function — run_trial","text":"","code":"run_trial(   model,   stop = 50,   legacy_behavior = \"Legacy\",   adaptive_behavior = \"Adaptive\",   metadata = list() )"},{"path":"https://css4s.github.io/socmod/reference/run_trial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trial runner helper function — run_trial","text":"model AgentBasedModel stop Stopping condition: max steps (int) predicate function adaptive_behavior behavior treated \"adaptation success\". Default \"Adaptive\".","code":""},{"path":"https://css4s.github.io/socmod/reference/run_trial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trial runner helper function — run_trial","text":"Trial object","code":""},{"path":"https://css4s.github.io/socmod/reference/run_trial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trial runner helper function — run_trial","text":"","code":"agents <- list(   Agent$new(name = \"1\", behavior = \"Legacy\", fitness = 1),   Agent$new(name = \"2\", behavior = \"Adaptive\", fitness = 4) ) #> Error in initialize(...): argument \"id\" is missing, with no default net <- igraph::make_graph(~ 1-2) model <- AgentBasedModel$new(agents = agents, graph = net) #> Error in initialize(...): unused argument (graph = list(2, FALSE, 1, 0, NULL, NULL, NULL, NULL, list(c(1, 0, 1), list(), list(c(\"1\", \"2\")), list()), <environment>)) trial <- run_trial(model, stop = 10) #> Error: object 'model' not found"},{"path":"https://css4s.github.io/socmod/reference/run_trials.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a grid of trial ensembles with parameter metadata — run_trials","title":"Run a grid of trial ensembles with parameter metadata — run_trials","text":"Runs trial ensembles across parameter grid. scalar function-valued parameters used model construction trial dynamics included metadata transparency.","code":""},{"path":"https://css4s.github.io/socmod/reference/run_trials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a grid of trial ensembles with parameter metadata — run_trials","text":"","code":"run_trials(   model_generator,   n_trials_per_param = 10,   stop = 10,   .progress = TRUE,   syncfile = NULL,   overwrite = FALSE,   ... )"},{"path":"https://css4s.github.io/socmod/reference/run_trials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run a grid of trial ensembles with parameter metadata — run_trials","text":"model_generator Function returns new AgentBasedModel instance according model_parameters, named list parameter label-value pairs. n_trials_per_param Number trials per parameter combination. stop Stopping condition (number function). .progress Whether show progressbar running trials. ... List parameter label-value pairs; vector singleton values.","code":""},{"path":"https://css4s.github.io/socmod/reference/run_trials.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run a grid of trial ensembles with parameter metadata — run_trials","text":"list Trial objects","code":""},{"path":"https://css4s.github.io/socmod/reference/run_trials.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run a grid of trial ensembles with parameter metadata — run_trials","text":"","code":"agents = c(Agent$new(1), Agent$new(2)) mod_gen <- function(mparam_list) {    return (     make_abm(       make_model_parameters(         # The first three positional ModelParameters fields go first.         success_biased_learning_strategy, graph,         # Then any auxiliary label-value pairs may be flexibly added here.         adaptive_fitness = mparam_list$adaptive_fitness       ),        agents = agents     )   ) } # Run 2 trials per parameter setting, stopping after 10 time steps.  trials <- run_trials(mod_gen, n_trials_per_param = 2, stop = 10,   learning_strategy = success_bias_learning_strategy,   adaptive_fitness = c(0.8, 1.0, 1.2) )  # With this we'll have six total trials, two for each adaptive_fitness. #> Error in tidyr::crossing(!!!model_parameters): `..1` must be a vector, not a <LearningStrategy/R6> object."},{"path":"https://css4s.github.io/socmod/reference/simulate_feld_1991.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Feld's 1991 Marketville Network — simulate_feld_1991","title":"Simulate Feld's 1991 Marketville Network — simulate_feld_1991","text":"Creates undirected network using degree distribution Feld (1991) based \"Marketville\" high school data. Uses configuration model generate network structure.","code":""},{"path":"https://css4s.github.io/socmod/reference/simulate_feld_1991.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Feld's 1991 Marketville Network — simulate_feld_1991","text":"","code":"simulate_feld_1991(seed = 42)"},{"path":"https://css4s.github.io/socmod/reference/simulate_feld_1991.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Feld's 1991 Marketville Network — simulate_feld_1991","text":"seed Integer. Random seed reproducibility. Default 42.","code":""},{"path":"https://css4s.github.io/socmod/reference/simulate_feld_1991.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Feld's 1991 Marketville Network — simulate_feld_1991","text":"igraph object representing simulated network.","code":""},{"path":"https://css4s.github.io/socmod/reference/simulate_feld_1991.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate Feld's 1991 Marketville Network — simulate_feld_1991","text":"friendship paradox—individuals fewer friends friends —emerges naturally due degree heterogeneity network.","code":""},{"path":"https://css4s.github.io/socmod/reference/simulate_feld_1991.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Feld's 1991 Marketville Network — simulate_feld_1991","text":"","code":"# Generate the network g <- simulate_feld_1991(seed = 42) #> Warning: The `method` argument of `sample_degseq()` must be fast.heur.simple instead of #> simple.no.multiple as of igraph 2.1.0. #> ℹ The deprecated feature was likely used in the socmod package. #>   Please report the issue to the authors. #> Error in igraph::sample_degseq(degrees, method = \"simple.no.multiple\"): At vendor/cigraph/src/games/degree_sequence.c:145 : No simple undirected graph can realize the given degree sequence. Invalid value  # Plot degree vs. mean degree of friends to show the paradox deg <- igraph::degree(g) #> Error: object 'g' not found mean_neighbor_deg <- sapply(igraph::V(g), function(v) {   nbs <- igraph::neighbors(g, v)   if (length(nbs) == 0) return(NA)   mean(igraph::degree(g, v = nbs)) }) #> Error: object 'g' not found  plot(deg, mean_neighbor_deg,      xlab = \"Individual's Friends\",      ylab = \"Mean Friends of Friends\") #> Error: object 'deg' not found abline(0, 1, col = \"red\") #> Error in int_abline(a = a, b = b, h = h, v = v, untf = untf, ...): plot.new has not been called yet  # Proportion of individuals with fewer friends than their friends mean(deg < mean_neighbor_deg, na.rm = TRUE) #> Error: object 'deg' not found"},{"path":"https://css4s.github.io/socmod/reference/socmod-package.html","id":null,"dir":"Reference","previous_headings":"","what":"socmod: Models of Social Behavior in R — socmod-package","title":"socmod: Models of Social Behavior in R — socmod-package","text":"Provides software tools conceptual framework creating computational models social behavior sustainability.","code":""},{"path":[]},{"path":"https://css4s.github.io/socmod/reference/socmod-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"socmod: Models of Social Behavior in R — socmod-package","text":"Maintainer: Matt Turner maturner01@gmail.com (ORCID)","code":""},{"path":"https://css4s.github.io/socmod/reference/success_bias_interact.html","id":null,"dir":"Reference","previous_headings":"","what":"Success-biased interaction function — success_bias_interact","title":"Success-biased interaction function — success_bias_interact","text":"Success-biased interaction function","code":""},{"path":"https://css4s.github.io/socmod/reference/success_bias_interact.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Success-biased interaction function — success_bias_interact","text":"","code":"success_bias_interact(learner, teacher, model)"},{"path":"https://css4s.github.io/socmod/reference/success_bias_learning_strategy.html","id":null,"dir":"Reference","previous_headings":"","what":"Define success-biased learning strategy. — success_bias_learning_strategy","title":"Define success-biased learning strategy. — success_bias_learning_strategy","text":"Define success-biased learning strategy.","code":""},{"path":"https://css4s.github.io/socmod/reference/success_bias_learning_strategy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define success-biased learning strategy. — success_bias_learning_strategy","text":"","code":"success_bias_learning_strategy"},{"path":"https://css4s.github.io/socmod/reference/success_bias_learning_strategy.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Define success-biased learning strategy. — success_bias_learning_strategy","text":"object class LearningStrategy (inherits R6) length 7.","code":""},{"path":"https://css4s.github.io/socmod/reference/success_bias_select_teacher.html","id":null,"dir":"Reference","previous_headings":"","what":"Success-biased teacher selection — success_bias_select_teacher","title":"Success-biased teacher selection — success_bias_select_teacher","text":"Selects successful neighbor (highest fitness) learn . Ties broken random.","code":""},{"path":"https://css4s.github.io/socmod/reference/success_bias_select_teacher.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Success-biased teacher selection — success_bias_select_teacher","text":"","code":"success_bias_select_teacher(learner, model)"},{"path":"https://css4s.github.io/socmod/reference/success_bias_select_teacher.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Success-biased teacher selection — success_bias_select_teacher","text":"learner Agent instance evaluating neighbors. model AgentBasedModel instance (used directly , included consistency learning functions).","code":""},{"path":"https://css4s.github.io/socmod/reference/success_bias_select_teacher.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Success-biased teacher selection — success_bias_select_teacher","text":"Agent object: selected teacher.","code":""},{"path":"https://css4s.github.io/socmod/reference/success_bias_select_teacher.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Success-biased teacher selection — success_bias_select_teacher","text":"","code":"model <- ? learner <- model$get_agent(1) teacher <- success_bias_select_teacher(learner, model) #> Error: object 'learner' not found"},{"path":"https://css4s.github.io/socmod/reference/summarise_adoption.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize behavior adoption over time from multiple trials — summarise_adoption","title":"Summarize behavior adoption over time from multiple trials — summarise_adoption","text":"Summarize behavior adoption time multiple trials","code":""},{"path":"https://css4s.github.io/socmod/reference/summarise_adoption.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize behavior adoption over time from multiple trials — summarise_adoption","text":"","code":"summarise_adoption(trials, tracked_behaviors = NULL)"},{"path":"https://css4s.github.io/socmod/reference/summarise_adoption.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize behavior adoption over time from multiple trials — summarise_adoption","text":"trials list Trial objects tracked_behaviors Optional vector behaviors include","code":""},{"path":"https://css4s.github.io/socmod/reference/summarise_adoption.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize behavior adoption over time from multiple trials — summarise_adoption","text":"tibble columns: trial, t, behavior, count, label, adaptation_success, fixation_steps","code":""},{"path":"https://css4s.github.io/socmod/reference/summarise_by_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise trials by metadata fields — summarise_by_parameters","title":"Summarise trials by metadata fields — summarise_by_parameters","text":"Summarise trials metadata fields","code":""},{"path":"https://css4s.github.io/socmod/reference/summarise_by_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise trials by metadata fields — summarise_by_parameters","text":"","code":"summarise_by_parameters(   trials,   input_parameters,   outcome_measures = c(\"success_rate\", \"mean_fixation_steps\") )"},{"path":"https://css4s.github.io/socmod/reference/summarise_by_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise trials by metadata fields — summarise_by_parameters","text":"trials list Trial objects summarise input_parameters Character vector model parameter fields group outcome_measures character vector outcome measures interest","code":""},{"path":"https://css4s.github.io/socmod/reference/summarise_by_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise trials by metadata fields — summarise_by_parameters","text":"data frame group means success steps","code":""},{"path":"https://css4s.github.io/socmod/reference/summarise_prevalence.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize behavior adoption over time from multiple trials — summarise_prevalence","title":"Summarize behavior adoption over time from multiple trials — summarise_prevalence","text":"Summarize behavior adoption time multiple trials","code":""},{"path":"https://css4s.github.io/socmod/reference/summarise_prevalence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize behavior adoption over time from multiple trials — summarise_prevalence","text":"","code":"summarise_prevalence(trials, tracked_behaviors = NULL)"},{"path":"https://css4s.github.io/socmod/reference/summarise_prevalence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize behavior adoption over time from multiple trials — summarise_prevalence","text":"trials list Trial objects tracked_behaviors Optional vector behaviors include","code":""},{"path":"https://css4s.github.io/socmod/reference/summarise_prevalence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize behavior adoption over time from multiple trials — summarise_prevalence","text":"tibble columns: trial, t, behavior, count, label, adaptation_success, fixation_steps","code":""}]
